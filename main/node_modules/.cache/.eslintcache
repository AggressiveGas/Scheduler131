[{"/Users/ajays/Documents/Scheduler131-1/main/src/index.js":"1","/Users/ajays/Documents/Scheduler131-1/main/src/reportWebVitals.js":"2","/Users/ajays/Documents/Scheduler131-1/main/src/App.js":"3","/Users/ajays/Documents/Scheduler131-1/main/src/UserPageHeader.js":"4","/Users/ajays/Documents/Scheduler131-1/main/src/Header.js":"5","/Users/ajays/Documents/Scheduler131-1/main/src/util/Home.js":"6","/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js":"7","/Users/ajays/Documents/Scheduler131-1/main/src/util/Register.js":"8","/Users/ajays/Documents/Scheduler131-1/main/src/util/Availability.js":"9","/Users/ajays/Documents/Scheduler131-1/main/src/util/Login.js":"10","/Users/ajays/Documents/Scheduler131-1/main/src/util/UserPage.js":"11","/Users/ajays/Documents/Scheduler131-1/main/src/util/Calendar.js":"12","/Users/ajays/Documents/Scheduler131-1/main/src/util/cn.js":"13"},{"size":635,"mtime":1701915378041,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1701915378041,"results":"16","hashOfConfig":"15"},{"size":1493,"mtime":1701915378040,"results":"17","hashOfConfig":"15"},{"size":19484,"mtime":1701915378041,"results":"18","hashOfConfig":"15"},{"size":16480,"mtime":1701915378040,"results":"19","hashOfConfig":"15"},{"size":4246,"mtime":1701915378041,"results":"20","hashOfConfig":"15"},{"size":20441,"mtime":1702028654321,"results":"21","hashOfConfig":"15"},{"size":4462,"mtime":1701915378041,"results":"22","hashOfConfig":"15"},{"size":1137,"mtime":1702015684020,"results":"23","hashOfConfig":"15"},{"size":4653,"mtime":1701915378041,"results":"24","hashOfConfig":"15"},{"size":2882,"mtime":1701915378041,"results":"25","hashOfConfig":"15"},{"size":1181,"mtime":1701915378041,"results":"26","hashOfConfig":"15"},{"size":85,"mtime":1701915378041,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"rw9iug",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/ajays/Documents/Scheduler131-1/main/src/index.js",[],[],["75"],"/Users/ajays/Documents/Scheduler131-1/main/src/reportWebVitals.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/App.js",["76","77"],[],"import React from 'react';\nimport { Route, Routes, Navigate, useLocation } from 'react-router-dom';  // Add useLocation import\nimport Header from './Header';\nimport UserPageHeader from './UserPageHeader';\nimport Home from './util/Home';\nimport UserPage from './util/UserPage';\nimport Login from './util/Login';\nimport Register from './util/Register';\nimport Room from './util/Room';\nimport Availability from './util/Availability';\n\nexport default function App() {\n  const location = useLocation();\n  const routesWithoutHeader = ['/login', '/register'];\n\n  // Check if the current route should display the UserPageHeader\n  const shouldDisplayUserPageHeader =\n    location.pathname.startsWith('/WelcomeUser') || location.pathname.startsWith('/room');\n\n  return (\n    <React.Fragment>\n      {shouldDisplayUserPageHeader ? <UserPageHeader /> : <Header />}\n      \n      <Routes>\n        {/* root path (\"/\") to \"/login\" */}\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/room\" element={<Room />} />\n        <Route path=\"/availability\" element={<Availability />} />\n       \n\n        {/*Basically the UserPage will display UserPageHeader instead of Header*/}\n        <Route\n          path=\"/WelcomeUser/:userId\"\n          element={<UserPage shouldDisplayHeader={!shouldDisplayUserPageHeader} />}\n        />\n      </Routes>\n    </React.Fragment>\n  );\n}\n\n","/Users/ajays/Documents/Scheduler131-1/main/src/UserPageHeader.js",["78","79","80","81","82","83"],[],"/*Essentially a duplicate of the header, however this one is tweaked for UserPage.\nThis is because we dont want to see the login or register buttons when we are logged in already*/\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\"; // Import useNavigate and useParams\nimport axios from \"axios\"; // Import axios\n\n\n\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function UserPageHeader() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n\n  const handleDeleteAccount = async () => {\n    // Display a confirmation dialog\n    const confirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n  \n    // If the user confirms, proceed with the deletion\n    if (confirmed) {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const userId = localStorage.getItem(\"userId\"); // Get userId from local storage\n  \n      try {\n        await axios.delete(`http://localhost:8080/api/user/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userTokenHere}`,\n          },\n        });\n  \n        //need to clear out local tokens since it auto logs them out afterwards and can be security risk\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('userEmail');\n        console.log(\"User has been deleted\");\n        // Redirect to login page after successful deletion\n        navigate(\"/login\");\n      } catch (error) {\n        console.error(\"Error deleting user: \", error);\n      }\n    } else {\n      // The user clicks \"Cancel\" in the confirmation dialog\n      console.log(\"Account deletion cancelled.\");\n    }\n  };\n\n  //function to logout and clear local storage\n  const logout = () => {\n    // Clear all relevant keys from local storage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n  \n    // Navigate to the login page\n    navigate('/login');\n  };\n  \n\n\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n        <div onClick={() => navigate(`/WelcomeUser/${localStorage.getItem('userId')}`)} className=\"-m-1.5 p-1.5 cursor-pointer\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src={logo} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n         \n          <a href=\"\" onClick={() => navigate(\"/room\")} className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n\n\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n          {/*Divides out the navbar*/}\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\n    \n          {/* User settings dropdown */}\n          <div className=\"relative\">\n            <button\n              id=\"dropdownDividerButton\"\n              data-dropdown-toggle=\"dropdownDivider\"\n              className=\"text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              type=\"button\"\n              onClick={toggleDropdown}\n            >\n              User settings{' '}\n              <svg\n                className={`w-2.5 h-2.5 ms-3 ${dropdownOpen ? 'rotate-180' : ''}`}\n                aria-hidden=\"true\"\n                fill=\"none\"\n                viewBox=\"0 0 10 6\"\n              >\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 1 4 4 4-4\" />\n              </svg>\n            </button>\n\n            {/* Dropdown menu */}\n            <div\n              id=\"dropdown\"\n              className={`absolute z-10 ${dropdownOpen ? 'block' : 'hidden'} bg-red-100 border border-red-300 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600 mt-2`}\n              style={{ width: 'calc(100%)' }}\n            >\n              <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                <li>\n                  {/* dropdown options below */}\n                </li>\n                <li>\n                   {/* delete account*/}\n                   <a\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                      onClick={handleDeleteAccount}\n                    >\n                      Delete Account\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2\">\n                {/* logout*/}\n                <a\n                  to=\"/login\"\n                  className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                  onClick = { logout }\n               >\n                  Log out\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a href= \"https://discord.gg/FuHSV3XRrf\"className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\" >  Discord\n                </a>\n                <Link to=\"/room\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n                  Schedule\n                </Link>\n\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n          <p className=\"text-sm leading-6 text-gray-900\" style={{ whiteSpace: 'pre' }}>\n              Welcome User!     Note: In the future, want to display the username instead of \"user\"\n          </p>\n\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}","/Users/ajays/Documents/Scheduler131-1/main/src/Header.js",["84","85","86","87","88","89","90","91"],[],"/*\nUpdated: 11/12/23 by Ajay\nWork in progress: The user dropdown (where log-in link will be embedded), register page connection with backend, dark mode toggle, footer section should be equally setup on all the pages\n*/\n\n\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src= {logo} alt=\"\" />\n          </Link>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n          <a href=\"#\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n          {/*Divides out the navbar*/}\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\n         \n          {/*Dropdown menu*/}\n          <div id=\"dropdown\" class=\"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600\">\n              <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Settings</a>\n                </li>\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Delete</a>\n                </li>\n              </ul>\n              <div class=\"py-2\">\n                <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">Log in</a>\n              </div>\n          </div>\n\n          \n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a\n                  href= \"https://discord.gg/FuHSV3XRrf\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Discord\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Schedule\n                </a>\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n            <p className=\"text-sm leading-6 text-gray-900\">\n              Stay up to date with your meetings by registering now.\n            </p>\n            <Link to=\"/register\" className=\"flex-none rounded-full bg-gray-900 px-3.5 py-1 text-sm font-semibold text-white shadow-sm hover:bg-gray-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900\">\n              Register now <span aria-hidden=\"true\">&rarr;</span>\n            </Link>\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}\n","/Users/ajays/Documents/Scheduler131-1/main/src/util/Home.js",["92","93","94","95"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\n\n\nexport default function Home() {\n\tconst navigate = useNavigate();\n\n\t//Manages input\n\tconst [inputs, setInputs] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\t// Function to handle input changes\n\tconst handleChange = (e) => {\n\t\tsetInputs((prev) => ({\n\t\t\t...prev,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\t// Function to send a login request to the server using post\n\tconst sendRequest = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/login\", {\n\t\t\t\temail: inputs.email,\n\t\t\t\tpassword: inputs.password,\n\t\t\t});\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\t// Function to handle a login\n\tconst handleSuccessfulLogin = async (userId) => {\n\t\tnavigate(`/WelcomeUser/${userId}`);\n\t};\n\n\t// Function to handle the form submission\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(inputs);\n\n\t\ttry {\n\t\t\tconst data = await sendRequest();\n\t\t\t//Passes the user's ID to the /welcome page when logging in\n\t\t\thandleSuccessfulLogin(data._id);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\t\n\t{/*<div className = \"App\"> </div> --removed this*/ }\n\n\treturn (\n\t\t<>\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\t\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\t\tLog in to Scheduler131\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</form>\n\t\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\t\tDon't have an account?{' '}\n\t\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tRegister here\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<footer>\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\n\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t\t</div>\n\t\t</footer>\n\t\t</>\n\t  )\n\t}\n\t","/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/Register.js",["114"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link} from \"react-router-dom\";\n\n\n\n\nexport default function Register() {\n\n\tconst navigate = useNavigate(); // useNavigate provides navigation functionality\n\tconst [inputs, setInputs] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst handleChange = (e) => {\n\t\tsetInputs((prev) => ({\n\t\t...prev,\n\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst sendRequest = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/register\", {\n\t\t\t\tname: inputs.name,\n\t\t\t\temail: inputs.email,\n\t\t\t\tpassword: inputs.password,\n\t\t\t});\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(inputs);\n\t\t//send http request\n\t\ttry {\n\t\t\tconst data = await sendRequest();\n\t\t\t// Navigate to login page after successful registration\n\t\t\tnavigate('/login');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\t\tRegister an account\n\t\t\t\t</h2>\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\t\t\tautoComplete=\"name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\tRegister \n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\t\tAlready have an account?{' '}\n\t\t\t\t\t<Link to=\"/login\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tLog in here\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<footer>\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-10\">\n\t\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t\t</div>\n\t  \t</footer>\n\t\t</>\n\t)\n}","/Users/ajays/Documents/Scheduler131-1/main/src/util/Availability.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/Login.js",["115","116","117"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\n\n\nexport default function Login() {\n\tconst navigate = useNavigate();\n\n    // Manages input\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    // Function to handle input changes\n    const handleChange = (e) => {\n        setInputs((prev) => ({\n            ...prev,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    // Function to send a login request to the server using post\n    const sendRequest = async () => {\n        try {\n            const res = await axios.post(\"http://localhost:8080/api/user/login\", {\n                email: inputs.email,\n                password: inputs.password,\n            });\n            const data = res.data;\n            localStorage.setItem('authToken', data.token);  // Store the token in localStorage\n\n            return data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n    // Function to handle a login\n    const handleSuccessfulLogin = async (userId, token) => {\n\t\tlocalStorage.setItem('userId', userId); // Save userId to local storage\n        localStorage.setItem('authToken', token); // Saves the authentication token to local storage\n        navigate(`/WelcomeUser/${userId}`);\n    };\n\n    // Function to handle the form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(inputs);\n\n        try {\n            const data = await sendRequest();\n            // Passes the user's ID and token to the /welcome page when logging in\n            handleSuccessfulLogin(data._id, data.token);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n  return (\n\t<>\n\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\tLog in to Scheduler131\n\t\t\t</h2>\n\t\t</div>\n\n\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\tEmail address\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t>\n\t\t\t\t\tLog in\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\tDon't have an account?{' '}\n\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\tRegister here\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n\t<footer>\n\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\n\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t</div>\n\t</footer>\n    </>\n  )\n}\n","/Users/ajays/Documents/Scheduler131-1/main/src/util/UserPage.js",["118","119"],[],"//This is the page in which the user will see, and it will show all user permisions and allow them to schedule\nimport dayjs from \"dayjs\";\nimport React, { useState } from \"react\";\nimport { generateDate, months } from \"./Calendar\";\nimport cn from \"./cn\";\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nexport default function UserPage() {\n\t\n\tconst days = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n\tconst currentDate = dayjs();\n\tconst [today, setToday] = useState(currentDate);\n\tconst [selectDate, setSelectDate] = useState(currentDate);\n\tconst { userId } = useParams();\n\n\n\treturn (\n\t\t\n    \n\t<div className=\"flex gap-10 sm:divide-x justify-center px-6 py-12 sm:w-1/2 mx-auto items-center sm:flex-row flex-col\">\n\t\t<div className=\"w-96 h-96 \">\n\t\t\t<div className=\"flex justify-between items-center\">\n\t\t\t\t<h1 className=\"select-none font-semibold\">\n\t\t\t\t\t{months[today.month()]}, {today.year()}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"flex gap-10 items-center \">\n\t\t\t\t\t<GrFormPrevious\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(today.month(today.month() - 1));\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<h1\n\t\t\t\t\tclassName=\" cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(currentDate);\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\tToday\n\t\t\t\t\t</h1>\n\t\t\t\t\t<GrFormNext\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(today.month(today.month() + 1));\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-7 \">\n\t\t\t{days.map((day, index) => {\n\t\t\t\treturn (\n\t\t\t\t<h1\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName=\"text-sm text-center h-14 w-14 grid place-content-center text-gray-500 select-none\"\n\t\t\t\t>\n\t\t\t\t\t{day}\n\t\t\t\t</h1>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t</div>\n\n\t\t\t<div className=\" grid grid-cols-7 \">\n\t\t\t{generateDate(today.month(), today.year()).map(\n\t\t\t\t({ date, currentMonth, today }, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName=\"p-2 text-center h-14 grid place-content-center text-sm border-t\"\n\t\t\t\t\t>\n\t\t\t\t\t<h1\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tcurrentMonth ? \"\" : \"text-gray-400\",\n\t\t\t\t\t\ttoday\n\t\t\t\t\t\t\t? \"bg-red-600 text-white\"\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\tselectDate\n\t\t\t\t\t\t\t.toDate()\n\t\t\t\t\t\t\t.toDateString() ===\n\t\t\t\t\t\t\tdate.toDate().toDateString()\n\t\t\t\t\t\t\t? \"bg-black text-white\"\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\"h-10 w-10 rounded-full grid place-content-center hover:bg-black hover:text-white transition-all cursor-pointer select-none\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSelectDate(date);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{date.date()}\n\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div className=\"h-96 w-96 sm:px-5\">\n\t\t\t<h1 className=\" font-semibold\">\n\t\t\tSchedule for {selectDate.toDate().toDateString()}\n\t\t\t</h1>\n            <p className=\"text-gray-400\">No meetings for today.</p>\n\t\t\t\n\t\t</div>\n\t</div>\n\t);\n}\n\n","/Users/ajays/Documents/Scheduler131-1/main/src/util/Calendar.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/cn.js",[],[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":14,"column":9,"nodeType":"124","messageId":"125","endLine":14,"endColumn":28},{"ruleId":"122","severity":1,"message":"127","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":100,"column":3,"nodeType":"130","messageId":"131","endLine":101,"endColumn":74},{"ruleId":"128","severity":1,"message":"129","line":103,"column":3,"nodeType":"130","messageId":"131","endLine":103,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":264,"column":11,"nodeType":"134","endLine":264,"endColumn":159},{"ruleId":"132","severity":1,"message":"135","line":314,"column":20,"nodeType":"134","endLine":317,"endColumn":22},{"ruleId":"132","severity":1,"message":"135","line":324,"column":17,"nodeType":"134","endLine":328,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":43,"column":3,"nodeType":"130","messageId":"131","endLine":44,"endColumn":74},{"ruleId":"128","severity":1,"message":"129","line":46,"column":3,"nodeType":"130","messageId":"131","endLine":46,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":206,"column":11,"nodeType":"134","endLine":206,"endColumn":126},{"ruleId":"132","severity":1,"message":"133","line":226,"column":19,"nodeType":"134","endLine":226,"endColumn":118},{"ruleId":"132","severity":1,"message":"133","line":229,"column":19,"nodeType":"134","endLine":229,"endColumn":118},{"ruleId":"132","severity":1,"message":"133","line":233,"column":17,"nodeType":"134","endLine":233,"endColumn":157},{"ruleId":"132","severity":1,"message":"133","line":300,"column":17,"nodeType":"134","endLine":303,"endColumn":18},{"ruleId":"122","severity":1,"message":"136","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":4,"column":26,"nodeType":"124","messageId":"125","endLine":4,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":57,"column":2,"nodeType":"130","messageId":"131","endLine":57,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":95,"column":8,"nodeType":"134","endLine":95,"endColumn":81},{"ruleId":"122","severity":1,"message":"138","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":23},{"ruleId":"122","severity":1,"message":"139","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":22},{"ruleId":"122","severity":1,"message":"140","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"141","line":12,"column":10,"nodeType":"124","messageId":"125","endLine":12,"endColumn":20},{"ruleId":"122","severity":1,"message":"142","line":12,"column":22,"nodeType":"124","messageId":"125","endLine":12,"endColumn":28},{"ruleId":"122","severity":1,"message":"143","line":27,"column":10,"nodeType":"124","messageId":"125","endLine":27,"endColumn":26},{"ruleId":"122","severity":1,"message":"144","line":27,"column":28,"nodeType":"124","messageId":"125","endLine":27,"endColumn":47},{"ruleId":"122","severity":1,"message":"145","line":32,"column":9,"nodeType":"124","messageId":"125","endLine":32,"endColumn":17},{"ruleId":"122","severity":1,"message":"146","line":34,"column":10,"nodeType":"124","messageId":"125","endLine":34,"endColumn":14},{"ruleId":"122","severity":1,"message":"147","line":35,"column":10,"nodeType":"124","messageId":"125","endLine":35,"endColumn":12},{"ruleId":"122","severity":1,"message":"148","line":39,"column":11,"nodeType":"124","messageId":"125","endLine":39,"endColumn":20},{"ruleId":"122","severity":1,"message":"149","line":163,"column":7,"nodeType":"124","messageId":"125","endLine":163,"endColumn":23},{"ruleId":"122","severity":1,"message":"150","line":185,"column":10,"nodeType":"124","messageId":"125","endLine":185,"endColumn":15},{"ruleId":"122","severity":1,"message":"151","line":189,"column":9,"nodeType":"124","messageId":"125","endLine":189,"endColumn":15},{"ruleId":"122","severity":1,"message":"152","line":193,"column":9,"nodeType":"124","messageId":"125","endLine":193,"endColumn":14},{"ruleId":"122","severity":1,"message":"153","line":197,"column":9,"nodeType":"124","messageId":"125","endLine":197,"endColumn":16},{"ruleId":"122","severity":1,"message":"154","line":199,"column":12,"nodeType":"124","messageId":"125","endLine":199,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":271,"column":13,"nodeType":"134","endLine":273,"endColumn":14},{"ruleId":"122","severity":1,"message":"155","line":44,"column":10,"nodeType":"124","messageId":"125","endLine":44,"endColumn":14},{"ruleId":"122","severity":1,"message":"136","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":4,"column":26,"nodeType":"124","messageId":"125","endLine":4,"endColumn":41},{"ruleId":"132","severity":1,"message":"133","line":98,"column":7,"nodeType":"134","endLine":98,"endColumn":80},{"ruleId":"122","severity":1,"message":"156","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":13},{"ruleId":"122","severity":1,"message":"157","line":18,"column":10,"nodeType":"124","messageId":"125","endLine":18,"endColumn":16},"no-new-object",["158"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'routesWithoutHeader' is assigned a value but never used.","'Login' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useMatch' is defined but never used.","'useResolvedPath' is defined but never used.","'useRef' is defined but never used.","'TimezoneSelect' is defined but never used.","'DateTimePicker' is defined but never used.","'Timepicker' is defined but never used.","'initTE' is defined but never used.","'selectedtimezone' is assigned a value but never used.","'setSelectedTimezone' is assigned a value but never used.","'navigate' is assigned a value but never used.","'from' is assigned a value but never used.","'to' is assigned a value but never used.","'arrayDate' is assigned a value but never used.","'fetchUserDetails' is assigned a value but never used.","'range' is assigned a value but never used.","'ranges' is assigned a value but never used.","'local' is assigned a value but never used.","'maxDate' is assigned a value but never used.","'handleApply' is defined but never used.","'data' is assigned a value but never used.","'axios' is defined but never used.","'userId' is assigned a value but never used.","no-object-constructor"]