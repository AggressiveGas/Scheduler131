[{"/Users/ajays/Documents/Scheduler131-1/main/src/index.js":"1","/Users/ajays/Documents/Scheduler131-1/main/src/reportWebVitals.js":"2","/Users/ajays/Documents/Scheduler131-1/main/src/App.js":"3","/Users/ajays/Documents/Scheduler131-1/main/src/UserPageHeader.js":"4","/Users/ajays/Documents/Scheduler131-1/main/src/Header.js":"5","/Users/ajays/Documents/Scheduler131-1/main/src/util/Home.js":"6","/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js":"7","/Users/ajays/Documents/Scheduler131-1/main/src/util/Register.js":"8","/Users/ajays/Documents/Scheduler131-1/main/src/util/Login.js":"9","/Users/ajays/Documents/Scheduler131-1/main/src/util/UserPage.js":"10","/Users/ajays/Documents/Scheduler131-1/main/src/util/Calendar.js":"11","/Users/ajays/Documents/Scheduler131-1/main/src/util/cn.js":"12","/Users/ajays/Documents/Scheduler131-2/main/src/index.js":"13","/Users/ajays/Documents/Scheduler131-2/main/src/App.js":"14","/Users/ajays/Documents/Scheduler131-2/main/src/reportWebVitals.js":"15","/Users/ajays/Documents/Scheduler131-2/main/src/Header.js":"16","/Users/ajays/Documents/Scheduler131-2/main/src/UserPageHeader.js":"17","/Users/ajays/Documents/Scheduler131-2/main/src/util/Register.js":"18","/Users/ajays/Documents/Scheduler131-2/main/src/util/Home.js":"19","/Users/ajays/Documents/Scheduler131-2/main/src/util/Login.js":"20","/Users/ajays/Documents/Scheduler131-2/main/src/util/UserPage.js":"21","/Users/ajays/Documents/Scheduler131-2/main/src/util/Room.js":"22","/Users/ajays/Documents/Scheduler131-2/main/src/util/Calendar.js":"23","/Users/ajays/Documents/Scheduler131-2/main/src/util/cn.js":"24","/Users/ajays/Documents/Scheduler131-1/main/src/util/MeetingPopup.js":"25"},{"size":635,"mtime":1702483054141,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1702483054141,"results":"28","hashOfConfig":"27"},{"size":1379,"mtime":1702483054141,"results":"29","hashOfConfig":"27"},{"size":19617,"mtime":1702504943029,"results":"30","hashOfConfig":"27"},{"size":16351,"mtime":1702488631915,"results":"31","hashOfConfig":"27"},{"size":4246,"mtime":1702483054142,"results":"32","hashOfConfig":"27"},{"size":30661,"mtime":1702502794466,"results":"33","hashOfConfig":"27"},{"size":4475,"mtime":1702488483214,"results":"34","hashOfConfig":"27"},{"size":4865,"mtime":1702502795363,"results":"35","hashOfConfig":"27"},{"size":6724,"mtime":1702503521027,"results":"36","hashOfConfig":"27"},{"size":1591,"mtime":1702483054141,"results":"37","hashOfConfig":"27"},{"size":85,"mtime":1702483054142,"results":"38","hashOfConfig":"27"},{"size":635,"mtime":1702247922913,"results":"39","hashOfConfig":"40"},{"size":1379,"mtime":1702247922912,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1702247922913,"results":"42","hashOfConfig":"40"},{"size":16480,"mtime":1702247922912,"results":"43","hashOfConfig":"40"},{"size":19484,"mtime":1702247922913,"results":"44","hashOfConfig":"40"},{"size":4462,"mtime":1702247922913,"results":"45","hashOfConfig":"40"},{"size":4246,"mtime":1702247922913,"results":"46","hashOfConfig":"40"},{"size":4653,"mtime":1702247922913,"results":"47","hashOfConfig":"40"},{"size":2882,"mtime":1702247922914,"results":"48","hashOfConfig":"40"},{"size":26204,"mtime":1702258495117,"results":"49","hashOfConfig":"40"},{"size":1181,"mtime":1702247922913,"results":"50","hashOfConfig":"40"},{"size":85,"mtime":1702247922914,"results":"51","hashOfConfig":"40"},{"size":1171,"mtime":1702503365142,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rw9iug",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"18qdzbv",{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/ajays/Documents/Scheduler131-1/main/src/index.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/reportWebVitals.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/App.js",["143","144"],[],"/Users/ajays/Documents/Scheduler131-1/main/src/UserPageHeader.js",["145","146","147","148","149","150"],[],"/*Essentially a duplicate of the header, however this one is tweaked for UserPage.\nThis is because we dont want to see the login or register buttons when we are logged in already*/\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\"; // Import useNavigate and useParams\nimport axios from \"axios\"; // Import axios\n\n\n\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function UserPageHeader() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n\n  const handleDeleteAccount = async () => {\n    // Display a confirmation dialog\n    const confirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n  \n    // If the user confirms, proceed with the deletion\n    if (confirmed) {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const userId = localStorage.getItem(\"userId\"); // Get userId from local storage\n  \n      try {\n        await axios.delete(`http://localhost:8080/api/user/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userTokenHere}`,\n          },\n        });\n  \n        //need to clear out local tokens since it auto logs them out afterwards and can be security risk\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('userEmail');\n        console.log(\"User has been deleted\");\n        // Redirect to login page after successful deletion\n        navigate(\"/login\");\n      } catch (error) {\n        console.error(\"Error deleting user: \", error);\n      }\n    } else {\n      // The user clicks \"Cancel\" in the confirmation dialog\n      console.log(\"Account deletion cancelled.\");\n    }\n  };\n\n  //function to logout and clear local storage\n  const logout = () => {\n    // Clear all relevant keys from local storage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userName');\n  \n    // Navigate to the login page\n    navigate('/login');\n  };\n  \n\n\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n        <div onClick={() => navigate(`/WelcomeUser/${localStorage.getItem('userId')}`)} className=\"-m-1.5 p-1.5 cursor-pointer\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src={logo} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n         \n          <a href=\"\" onClick={() => navigate(\"/room\")} className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n\n\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n          {/*Divides out the navbar*/}\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\n    \n          {/* User settings dropdown */}\n          <div className=\"relative\">\n            <button\n              id=\"dropdownDividerButton\"\n              data-dropdown-toggle=\"dropdownDivider\"\n              className=\"text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\"\n              type=\"button\"\n              onClick={toggleDropdown}\n            >\n              Account{' '}\n              <svg\n                className={`w-2.5 h-2.5 ms-3 ${dropdownOpen ? 'rotate-180' : ''}`}\n                aria-hidden=\"true\"\n                fill=\"none\"\n                viewBox=\"0 0 10 6\"\n              >\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 1 4 4 4-4\" />\n              </svg>\n            </button>\n\n            {/* Dropdown menu */}\n            <div\n              id=\"dropdown\"\n              className={`absolute z-10 ${dropdownOpen ? 'block' : 'hidden'} bg-red-100 border border-red-300 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600 mt-2`}\n              style={{ width: 'calc(170%)' }}\n            >\n              <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                {/* dropdown options below */}\n\n                <li className= \"block px-4 py-2 text-sm text-gray-700\">\n                  <p>{localStorage.getItem('userName')}</p>\n                  <strong>{localStorage.getItem('userEmail')}</strong>\n                </li>\n\n                <li>\n                   {/* delete account*/}\n                <a\n                  className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                  onClick={handleDeleteAccount}\n                >\n                  Delete Account\n                </a>\n                </li>\n              </ul>\n\n              <div className=\"py-2\">\n                {/* logout*/}\n                <a\n                  to=\"/login\"\n                  className=\"border-t border-red-300 block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                  onClick = { logout }\n                >\n                  Log out\n                </a>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a href= \"https://discord.gg/FuHSV3XRrf\"className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\" >  Discord\n                </a>\n                <Link to=\"/room\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n                  Schedule\n                </Link>\n\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n          <p className=\"text-sm leading-6 text-gray-900\" style={{ whiteSpace: 'pre' }}>\n              Welcome {localStorage.getItem('userName')}, to your homepage!\n          </p>\n\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}","/Users/ajays/Documents/Scheduler131-1/main/src/Header.js",["151","152","153","154","155","156","157","158"],[],"/*\nUpdated: 11/12/23 by Ajay\nWork in progress: The user dropdown (where log-in link will be embedded), register page connection with backend, dark mode toggle, footer section should be equally setup on all the pages\n*/\n\n\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src= {logo} alt=\"\" />\n          </Link>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n          <a href=\"#\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n         \n          {/*Dropdown menu*/}\n          <div id=\"dropdown\" class=\"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600\">\n              <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Settings</a>\n                </li>\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Delete</a>\n                </li>\n              </ul>\n              <div class=\"py-2\">\n                <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">Log in</a>\n              </div>\n          </div>\n\n          \n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a\n                  href= \"https://discord.gg/FuHSV3XRrf\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Discord\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Schedule\n                </a>\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n            <p className=\"text-sm leading-6 text-gray-900\">\n              Stay up to date with your meetings by registering now.\n            </p>\n            <Link to=\"/register\" className=\"flex-none rounded-full bg-gray-900 px-3.5 py-1 text-sm font-semibold text-white shadow-sm hover:bg-gray-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900\">\n              Register now <span aria-hidden=\"true\">&rarr;</span>\n            </Link>\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}\n",["159"],"/Users/ajays/Documents/Scheduler131-1/main/src/util/Home.js",["160","161","162","163"],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],[],"import React, { useRef, useState, useEffect } from 'react';\nimport TimezoneSelect from \"react-timezone-select\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; //going to be used to calls like on any other form {personally I like axios}\nimport './RoomStyling.css';\nimport DateTimePicker from 'react-tailwindcss-datetimepicker';\nimport moment from 'moment-timezone';\nimport { Input, Popover, PopoverHandler, PopoverContent} from \"@material-tailwind/react\";\nimport { format } from \"date-fns\";\nimport { DayPicker } from \"react-day-picker\";\nimport { ChevronRightIcon, ChevronLeftIcon } from \"@heroicons/react/24/outline\";\nimport { Timepicker, initTE } from \"tw-elements\";\n\n\n\n//Pop-ups that the user would see(the UI setup for rooms)\nconst Room = () => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showCreatePopup, setShowCreatePopup] = useState(false);\n  const [showAvailabilityPopup, setShowAvailabilityPopup] = useState(false);\n  const [selectedtimezone, setSelectedTimezone] = useState(''); //holds the entered timezone\n  const [roomCode, setRoomCode] = useState(''); //holds the entered room code\n  const [roomName, setRoomName] = useState(''); //holds the entered room name\n  const [userRooms, setUserRooms] = useState([]);//will hold list of rooms user is associated with\n  const [selectedRoom, setSelectedRoom] = useState(null); //will hold selected rooms on ui\n  const navigate = useNavigate();\n  const [date, setDate] = React.useState(new Date());\n  const [from, setFrom] = useState(\"0\");\n  const [to, setTo] = useState(\"0\");\n  const [commonAvailability, setCommonAvailability] = useState(null); //holds common availability\n  const [showCreateMeetingPopup, setShowCreateMeetingPopup] = useState(false);\n  const [meetingDate, setMeetingDate] = useState(new Date());\n\n  \n\n  \n  //trying to split the date so that it can later be used for comparisons\n  const SplitDate = (defaultValue) => {\n    const arrayDate = defaultValue.toLocaleDateString().split(\"/\");\n    console.log(defaultValue);\n  }\n \n  const handleAddClick = () => {\n    setShowPopup(true);\n  };\n\n\n  const handleAddRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking add --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAddPopup(true); // Show the \"Add\" popup\n  };\n\n\n  const handleCreateRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowCreatePopup(true); // Show the \"Create\" popup\n  };\n\n\n  const handleAvailability = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAvailabilityPopup(true); // Show the \"Availability\" popup\n    setSelectedRoom(false);\n    \n  };\n\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setShowAddPopup(false);\n    setShowCreatePopup(false);\n    setShowAvailabilityPopup(false);\n  };\n\n\n\n\n  const handlePreviousPagePopup = () => {\n    //setSelectedRoom(true);\n    setShowAvailabilityPopup(false);\n  }\n\n//when user clicks room shows them the next step\n  const handleRoomClick = async (room) => {\n    setSelectedRoom(room);\n  };\n  \n\n//functionalities for creating and joining rooms:\n//Function to create a new room\nconst createRoomApiCall = async (roomName) => {\n\n\n  //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n\n\n    const response = await axios.post('http://localhost:8080/api/rooms', { name: roomName }, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n\n    //console log for success\n    console.log('Room created successfully:', response.data);\n  } catch (error) {\n    //console log for error\n    console.error('Error creating room:', error.response.data.message);\n  }\n};\n\n\n// Function to join a room\nconst joinRoomApiCall = async (roomCode) => {\n\n\n  //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n\n\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n\n\n    const response = await axios.post(`http://localhost:8080/api/rooms/${roomCode}/users`, null, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n\n    //console log for success\n    console.log('Joined room successfully:', response.data);\n  } catch (error) {\n    //console log for error\n    console.error('Error joining room:', error.response.data.message);\n  }\n};\n\n\n\n\n//this here will get the users rooms that they joined or created.\nuseEffect(() => {\n  const fetchUserRooms = async () => {\n    try {\n     \n      const userId = localStorage.getItem(\"userId\");\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const response = await axios.get(`http://localhost:8080/api/user/${userId}/rooms`, {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`,\n        },\n      });\n\n\n      const roomsWithUserDetails = await Promise.all(\n        response.data.map(async (room) => {\n          const userDetailsList = await Promise.all(\n            room.userlist.map(async (userId) => {\n              const userResponse = await axios.get(`http://localhost:8080/api/user/${userId}`);\n              return userResponse.data;\n            })\n          );\n          return { ...room, userDetailsList };\n        })\n      );\n\n\n      setUserRooms(roomsWithUserDetails || []);\n    } catch (error) {\n      console.error('Error fetching user rooms:', error.response.data.message);\n    }\n  };\n\n\n  fetchUserRooms();\n}, []);\n\n\n\n\n//instead of grabbing user ID I need their names which will be displayed in room details after\nconst fetchUserDetails = async (userId) => {\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n    const response = await axios.get(`http://localhost:8080/api/user/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n\n    return response.data; // Assuming the user details are returned in the response\n  } catch (error) {\n    console.error('Error fetching user details:', error.response.data.message);\n    return null;\n  }\n};\n\n\n//for the DATETIMEPICKER UI\nconst now = new Date();\n  const start = moment(\n    new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0)\n  );\n  const end = moment(start).add(1, 'days').subtract(1, 'seconds');\n  const [range, setRange] = useState({\n    start: start,\n    end: end,\n  });\n  const ranges = {\n    Today: [moment(start), moment(end)],\n   \n  };\n  const local = {\n    format: 'DD-MM-YYYY HH:mm',\n    sundayFirst: false,\n  };\n  const maxDate = moment(start).add(30, 'month');\n\n\n  function handleApply(startDate, endDate) {\n    setRange({ start: startDate, end: endDate });\n  }\n\n\n\n\n// Function to generate an array of time slots with 10-minute intervals starting from 12:00 PM\nconst generateTimeSlots = () => {\n  /*old one*/\n  /*const startTime = moment().startOf('day').add(12, 'hours'); // Start from 12:00 PM*/\n  \n  const startTime = moment().startOf('day'); // Start from 12:00 AM (midnight)\n  const timeSlots = [];\n\n  // Loop to generate 144 time slots (10-minute intervals for 24 hours)\n  for (let i = 0; i < 144; i++) {\n      // Calculate the time for each slot and format it as 'hh:mm A'\n      const time = startTime.clone().add(i * 10, 'minutes').format('hh:mm A');\n      timeSlots.push(time);\n  }\n\n  return timeSlots;\n};\n \n// Function to convert a time string to the number of 10-minute intervals from midnight\nconst timeToIntervals = (time) => {\n  const [hours, minutes] = time.split(\":\").map(Number);\n// Calculate the total number of intervals using the formula: hours * 6 + Math.floor(minutes / 10) math make brain hurt btw\n  return hours * 6 + Math.floor(minutes / 10);\n};\n\n\nconst handleAvailabilitySubmit = async () => {\n  try {\n    //DATE FORMATTING AND STUFFS OK\n    const day = format(date, \"MM-dd-yyyy\");\n    const startTime = moment(from, [\"h:mm A\"]).format(\"HH:mm\");\n    const endTime = moment(to, [\"h:mm A\"]).format(\"HH:mm\");\n    const startIntervals = timeToIntervals(startTime);\n    const endIntervals = timeToIntervals(endTime);\n\n    const availabilityData = {\n      day: day,\n      intervals: [\n        {\n          start: startIntervals,\n          end: endIntervals\n        }\n      ]\n    };\n\n    console.log('Availability Payload:', availabilityData); \n\n    //grab userid and token\n    const userTokenHere = localStorage.getItem('authToken');\n    const userId = localStorage.getItem('userId');\n\n    //I STRUGGLED WITH THIS POST for some reason its /user/id even though its not in availabilityroutes.js\n    const response = await axios.post(\n      `http://localhost:8080/api/user/${userId}/availability`,\n      availabilityData,\n      {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    //just logs to let know if post went through or not\n    console.log('Availability submitted successfully:', response.data);\n  } catch (error) {\n    console.error('Error submitting availability:', error.message);\n  }\n};\n\n\nconst handleCreateMeeting = () => {\n  setShowPopup(false);\n  setShowCreateMeetingPopup(true);\n  setMeetingDate(new Date());\n};\n\nconst handleCreateMeetingSubmit = async () => {\n  try {\n    // DATE FORMATTING AND STUFFS OK\n    const day = format(date, \"MM-dd-yyyy\");\n    const startTime = moment(from, [\"h:mm A\"]).format(\"HH:mm\");\n    const endTime = moment(to, [\"h:mm A\"]).format(\"HH:mm\");\n    const startIntervals = timeToIntervals(startTime);\n    const endIntervals = timeToIntervals(endTime);\n\n    // Pass selectedRoom directly to the function\n    const room = selectedRoom;\n\n    const meetingData = {\n      roomcode: room.joincode,\n      day: day,\n      start: startIntervals,\n      end: endIntervals,\n    };\n\n    console.log('Meeting Payload:', meetingData);\n\n    // grab userid and token\n    const userTokenHere = localStorage.getItem('authToken');\n    const userId = localStorage.getItem('userId');\n\n    const response = await axios.post(\n      `http://localhost:8080/api/meetings/${room.joincode}`,\n      meetingData,\n      {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    // just logs to let know if post went through or not\n    console.log('Meeting submitted successfully:', response.data);\n  } catch (error) {\n    console.error('Error submitting meeting:', error.message);\n  }\n};\n\n\n\n\n  // Function to fetch and set common availability\n  const fetchCommonAvailability = async (room) => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/timeslots/${room.joincode}`);\n      const commonAvailability = response.data;\n\n      // Set the common availability in the state\n      setCommonAvailability(commonAvailability);\n\n      console.log('Common Availability:', commonAvailability);\n    } catch (error) {\n      console.error('Error fetching common availability:', error.response.data.message);\n    }\n  };\n\n\n\n \n//everything below is formatting/buttons/inputs for the pop up forms.\n  return (  \n<div className=\"container flex flex-wrap items-start justify-start h-screen px-9 py-12 relative\">\n    {/* +add room button */}\n    <button\n      className={`room-button ${selectedRoom ? 'selected-room' : 'add-room-button'}`}\n      onClick={handleAddClick}\n    >\n      <span className=\"mr-2 text-4xl\">+</span>\n      Add Room\n    </button>\n\n\n    {/* Render clickable room buttons */}\n    {userRooms.map((room) => (\n        <button\n          key={room.id}\n          className=\"room-button\"\n          onClick={() => handleRoomClick(room)}\n        >\n          {room.name}\n        </button>\n    ))}\n\n\n\n\n{selectedRoom && (\n        // Overlay for Room Details\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-0\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={() => setSelectedRoom(null)}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n\n            <p className=\"text-lg font-semibold mb-4\">Room Details</p>\n\n\n            <p>Room Name: {selectedRoom.name}</p>\n            <p>Join Code: {selectedRoom.joincode}</p>\n\n\n            <p>\n              Users:{' '}\n              {selectedRoom.userDetailsList.map((user, index) => (\n                <span key={user.id}>\n                  {user.name}\n                  {index !== selectedRoom.userDetailsList.length - 1 && ', '}\n                </span>\n              ))}\n            </p>\n\n          {/* Button to create a meeting*/}\n          <button\n              className=\"block rounded-lg px-3 py-2 mt-2 text-sm font-semibold leading-6 text-gray-900 bg-gray-100 hover:bg-gray-300 w-full\"\n              onClick={handleAvailability}\n            >  \n              Add your Availability\n            </button>\n          {/* Button to create a meeting*/}\n            <button\n              className=\"block rounded-lg px-3 py-2 mt-2 text-sm font-semibold leading-6 text-gray-900 bg-gray-100 hover:bg-gray-300 w-full\"\n              onClick={handleCreateMeeting}\n            >  \n              Schedule Meeting\n            </button>\n            {/* Button to fetch and show common availability */}\n            <button\n              className=\"block rounded-lg px-3 py-2 mt-2 text-sm font-semibold leading-6 text-gray-900 bg-gray-100 hover:bg-gray-300 w-full\"\n              onClick={() => fetchCommonAvailability(selectedRoom)}\n            >  \n              Show Common Availability\n            </button>\n            <br ></br>\n            <p className=\"border-t-2 px-10 pb-2 pt-2 font-bold\">Common Availability:</p>\n            {/* Display common availability if available */}\n              {commonAvailability && (\n                <div className=\"mt-4 overflow-y-auto max-h-40 text-center\">\n                  {/* Loop through the days and display common availability for each day */}\n                    {Object.keys(commonAvailability).map((day) => (\n                      <div key={day} className=\"mb-4\">\n                        <p className=\"font-bold\">{day}</p>\n                        <div className=\"flex flex-wrap justify-center\">\n                          {commonAvailability[day].map((interval) => (\n                            <div key={interval} className=\"mx-2 my-1\">\n                              {/* Convert interval back to the proper time and display */}\n                              {generateTimeSlots()[interval]}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n      {showPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n            //this here is the red x button which will close the popup\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n\n            <button\n            //this is the blue \"add\" button above the \"OR\" statement\n              className=\"bg-blue-500 hover:bg-blue-700 text-white px-10 py-2 rounded mb-2\"\n              onClick={handleAddRoom}\n            >\n              Add\n            </button>\n\n\n            <p className=\"text-lg font-semibold my-2\">OR</p>\n\n\n            <button\n            //this is the green \"create\" button below  the \"OR\" statement\n              className=\"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mb-2\"\n              onClick={handleCreateRoom}\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      )}\n\n\n{/*Below is the Add a new room popup box alongside its formatting*/}\n      {showAddPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n\n            <p className=\"text-lg font-semibold mb-4\">Enter a code to join a room</p>\n\n\n            {/* Input textbox for entering room code */}\n            <input\n              type=\"text\"\n              className=\"border border-gray-400 px-3 py-2 rounded w-full\"\n              placeholder=\"Enter code\"\n              value={roomCode}\n              onChange={(e) => setRoomCode(e.target.value)}\n            />\n\n\n             {/* Join Room button after they put in their code*/}\n            <button\n              className=\"bg-blue-500 hover:bg-blue-700 text-white px-8 py-2 rounded mt-4\"\n              onClick={() => {\n                // Add logic for joining a room\n                joinRoomApiCall(roomCode); //pass the user's input value to the call\n       \n                setShowAddPopup(false);\n                \n              }}\n            >\n              Join Room\n            </button>\n          </div>\n        </div>\n      )}\n\n\n{/*Below is the Create a new room popup box alongside its formatting*/}\n      {showCreatePopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n\n            <p className=\"text-lg font-semibold mb-4\">Create a new room</p>\n\n\n            {/* Input textbox for creating a new room-- SideNote: this is where they put the room name */}\n            <input\n              type=\"text\"\n              className=\"border border-gray-400 px-3 py-2 rounded w-full\"\n              placeholder=\"Enter room name\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n            />\n\n\n            {/* Create Room button after they put in their new room name*/}\n            <button\n              className=\"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mt-4\"\n              onClick={() => {\n                // Add logic for creating a room\n                createRoomApiCall(roomName); //pass the user's input for room name to api call\n       \n                setShowCreatePopup(false);\n              }}\n            >\n              Create Room\n            </button>\n          </div>\n        </div>\n      )}\n\n{/*CREATE MEETING POPUP*/}\n{showCreateMeetingPopup && (\n  <div className=\"fixed inset-0 flex items-center justify-center\">\n    <div className=\"bg-white p-16 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n      {/* Close button */}\n      <button\n        className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n        onClick={() => setShowCreateMeetingPopup(false)}\n      >\n        <span className=\"text-2xl font-bold\">&times;</span>\n      </button>\n\n      <p className=\"text-lg font-semibold mb-4\">Create a Meeting</p>\n\n      {/* Date and time picker components */}\n      <div className=\"p-26\">\n        <Popover placement=\"right\">\n          {/* Use the same Input component for date and time pickers */}\n          <PopoverHandler>\n            <Input\n              onChange={() => null}\n              value={meetingDate ? format(meetingDate, \"PPP\") : \"Select a Date and Time\"}\n              className=\"rounded-lg\"\n            />\n          </PopoverHandler>\n          <PopoverContent>\n                    {/*Date/Day picker */}\n                    <DayPicker\n                    mode=\"single\"\n                    selected={meetingDate}\n                    onSelect={(date) => setMeetingDate(date)}\n                    value = {setDate}\n                    showOutsideDays\n                    showTimeSelect\n                    timeIntervals = {10}\n                    timeFormat = \"hh:mm\"\n                   \n                    className=\"border-0\"\n                    classNames={{\n                      caption: \"flex justify-center py-2 mb-4 relative items-center\",\n                      caption_label: \"text-sm font-medium text-gray-900\",\n                      nav: \"flex items-center\",\n                      nav_button:\n                        \"h-6 w-6 bg-transparent hover:bg-blue-gray-50 p-1 rounded-full transition-colors duration-300\",\n                      nav_button_previous: \"absolute left-1.5\",\n                      nav_button_next: \"absolute right-1.5\",\n                      table: \"w-full border-collapse\",\n                      head_row: \"flex font-medium text-gray-900\",\n                      head_cell: \"m-0.5 w-9 font-normal text-sm\",\n                      row: \"flex w-full mt-2\",\n                      cell: \"text-gray-600 rounded-full h-9 w-9 text-center text-sm p-0 m-0.5 relative [&:has([aria-selected].day-range-end)]:rounded-full [&:has([aria-selected].day-outside)]:bg-gray-900/20 [&:has([aria-selected].day-outside)]:text-white [&:has([aria-selected])]:bg-gray-900/50 first:[&:has([aria-selected])]:rounded-full last:[&:has([aria-selected])]:rounded-full focus-within:relative focus-within:z-20\",\n                      day: \"h-9 w-9 p-0 font-normal\",\n                      day_range_end: \"day-range-end\",\n                      day_selected:\n                        \"rounded-full bg-gray-900 text-white hover:bg-gray-900 hover:text-white focus:bg-gray-900 focus:text-white\",\n                      day_today: \"rounded-full bg-gray-200 text-gray-900\",\n                      day_outside:\n                        \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-500 aria-selected:text-gray-900 aria-selected:bg-opacity-10\",\n                      day_disabled: \"text-gray-500 opacity-50\",\n                      day_hidden: \"invisible\",\n                    }}\n                    components={{\n                      IconLeft: ({ ...props }) => (\n                        <ChevronLeftIcon {...props} className=\"h-4 w-4 stroke-2\" />\n                      ),\n                      IconRight: ({ ...props }) => (\n                        <ChevronRightIcon {...props} className=\"h-4 w-4 stroke-2\" />\n                      ),\n                    }}\n                 \n                  />\n\n\n                  <hr className= \"mt-4\"></hr>\n\n\n                  {/*Time picker*/}\n                  <div className=\"mt-4 flex justify-center\">\n                    <select id=\"from\" className=\"p-2 border border-gray-300\" onChange={(e) => setFrom(e.target.value)}>\n                      <option value=\"0\">Select Time</option>\n                      {generateTimeSlots().map((time, index) => (\n                        <option key={index} value={time}>\n                          {time}\n                        </option>\n                      ))}\n                    </select>\n                    <b className=\"p-2\">TO</b>\n                    <select id=\"toDate\" className=\"p-2 border border-gray-300\" onChange={(e) => setTo(e.target.value)}>\n                      <option value=\"0\">Select Time</option>\n                      {generateTimeSlots().map((time, index) => (\n                        <option key={index} value={time}>\n                          {time}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  {/* Create Meeting button */}\n                    <button\n                      className=\"bg-green-500 hover:bg-green-700 text-white px-10 py-2 rounded-lg mt-6 mb-2 ml-20\"\n                      onClick={() => {\n                        handleCreateMeetingSubmit();\n                        const customMessage = \"Meeting has been scheduled\"\n                        alert(customMessage);\n                      }}\n                    >\n                      Create\n                    </button>\n                  </PopoverContent>\n                  </Popover>\n                </div>\n              </div>\n            </div>\n          )}\n{/*Below is the Availability popup box alongside its formatting*/}\n      {showAvailabilityPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-16 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n           \n            {/*\n           \n            The below would let users go back to the previous page    \n\n\n            */}\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 left-2\"\n              onClick={handlePreviousPagePopup}\n            >\n              <span className=\"text-2xl font-bold\">&larr; </span>\n            </button>\n\n\n            <p className=\"text-lg font-semibold mb-4\">Select your Availability</p>\n\n\n\n            <div className=\"p-26\">\n              <Popover placement=\"right\">\n                <PopoverHandler>\n                  <Input\n                    onChange={() => null}\n                    value={date ? format(date, \"PPP\") : \"Select a Date and Time\"}\n                    className = \"rounded-lg\"\n                  />\n                </PopoverHandler>\n                <PopoverContent>\n                 \n                  {/*Date/Day picker */}\n                  <DayPicker\n                    mode=\"single\"\n                    selected={date}\n                    onSelect={setDate}\n                    value = {setDate}\n                    showOutsideDays\n                    showTimeSelect\n                    timeIntervals = {10}\n                    timeFormat = \"hh:mm\"\n                   \n                    className=\"border-0\"\n                    classNames={{\n                      caption: \"flex justify-center py-2 mb-4 relative items-center\",\n                      caption_label: \"text-sm font-medium text-gray-900\",\n                      nav: \"flex items-center\",\n                      nav_button:\n                        \"h-6 w-6 bg-transparent hover:bg-blue-gray-50 p-1 rounded-full transition-colors duration-300\",\n                      nav_button_previous: \"absolute left-1.5\",\n                      nav_button_next: \"absolute right-1.5\",\n                      table: \"w-full border-collapse\",\n                      head_row: \"flex font-medium text-gray-900\",\n                      head_cell: \"m-0.5 w-9 font-normal text-sm\",\n                      row: \"flex w-full mt-2\",\n                      cell: \"text-gray-600 rounded-full h-9 w-9 text-center text-sm p-0 m-0.5 relative [&:has([aria-selected].day-range-end)]:rounded-full [&:has([aria-selected].day-outside)]:bg-gray-900/20 [&:has([aria-selected].day-outside)]:text-white [&:has([aria-selected])]:bg-gray-900/50 first:[&:has([aria-selected])]:rounded-full last:[&:has([aria-selected])]:rounded-full focus-within:relative focus-within:z-20\",\n                      day: \"h-9 w-9 p-0 font-normal\",\n                      day_range_end: \"day-range-end\",\n                      day_selected:\n                        \"rounded-full bg-gray-900 text-white hover:bg-gray-900 hover:text-white focus:bg-gray-900 focus:text-white\",\n                      day_today: \"rounded-full bg-gray-200 text-gray-900\",\n                      day_outside:\n                        \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-500 aria-selected:text-gray-900 aria-selected:bg-opacity-10\",\n                      day_disabled: \"text-gray-500 opacity-50\",\n                      day_hidden: \"invisible\",\n                    }}\n                    components={{\n                      IconLeft: ({ ...props }) => (\n                        <ChevronLeftIcon {...props} className=\"h-4 w-4 stroke-2\" />\n                      ),\n                      IconRight: ({ ...props }) => (\n                        <ChevronRightIcon {...props} className=\"h-4 w-4 stroke-2\" />\n                      ),\n                    }}\n                 \n                  />\n\n\n                  <hr className= \"mt-4\"></hr>\n\n\n                  {/*Time picker*/}\n                  <div className=\"mt-4 flex justify-center\">\n                    <select id=\"from\" className=\"p-2 border border-gray-300\" onChange={(e) => setFrom(e.target.value)}>\n                      <option value=\"0\">Select Time</option>\n                      {generateTimeSlots().map((time, index) => (\n                        <option key={index} value={time}>\n                          {time}\n                        </option>\n                      ))}\n                    </select>\n                    <b className=\"p-2\">TO</b>\n                    <select id=\"toDate\" className=\"p-2 border border-gray-300\" onChange={(e) => setTo(e.target.value)}>\n                      <option value=\"0\">Select Time</option>\n                      {generateTimeSlots().map((time, index) => (\n                        <option key={index} value={time}>\n                          {time}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                 \n\n\n                 \n                         \n                  <button\n                    className=\"bg-red-500 hover:bg-red-700 text-white px-10 py-2 rounded-lg mt-6 mb-2 ml-20\"\n                    onClick={() => {\n                      handleAvailabilitySubmit();\n                      const customMessage = \"Availability has been scheduled\";\n                      // just lets user know the button worked\n                      alert(customMessage);\n                    }}\n                  >\n                    Apply\n                  </button>\n                 \n                </PopoverContent>\n              </Popover>\n            </div>\n          </div>\n        </div>\n       \n      )}\n    </div>\n  );\n};\n\n\nexport default Room;\n\n\n","/Users/ajays/Documents/Scheduler131-1/main/src/util/Register.js",["181"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link} from \"react-router-dom\";\n\n\n\n\nexport default function Register() {\n\n\tconst navigate = useNavigate(); // useNavigate provides navigation functionality\n\tconst [inputs, setInputs] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst handleChange = (e) => {\n\t\tsetInputs((prev) => ({\n\t\t...prev,\n\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst sendRequest = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/register\", {\n\t\t\t\tname: inputs.name,\n\t\t\t\temail: inputs.email,\n\t\t\t\tpassword: inputs.password,\n\t\t\t});\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(inputs);\n\t\t//send http request\n\t\ttry {\n\t\t\tconst data = await sendRequest();\n\t\t\t// Navigate to login page after successful registration\n\t\t\tnavigate('/login');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\t\tRegister an account\n\t\t\t\t</h2>\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\t\t\tautoComplete=\"name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\tRegister \n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\t\tAlready have an account?{' '}\n\t\t\t\t\t<Link to=\"/login\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tLog in here\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t{/* \n\t\t<footer>\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-10\">\n\t\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t\t</div>\n\t  \t</footer>\n\t\t*/}\n\t\t</>\n\t)\n}","/Users/ajays/Documents/Scheduler131-1/main/src/util/Login.js",["182","183","184"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\n\n\nexport default function Login() {\n\tconst navigate = useNavigate();\n\n    // Manages input\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    // Function to handle input changes\n    const handleChange = (e) => {\n        setInputs((prev) => ({\n            ...prev,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    // Function to send a login request to the server using post\n    const sendRequest = async () => {\n        try {\n            const res = await axios.post(\"http://localhost:8080/api/user/login\", {\n                email: inputs.email,\n                password: inputs.password,\n            });\n            const data = res.data;\n            localStorage.setItem('authToken', data.token);  // Store the token in localStorage\n\n            return data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n    // Function to handle a login\n    const handleSuccessfulLogin = async (userId, token, userName, email) => {\n\t\tlocalStorage.setItem('userId', userId); // Save userId to local storage\n        localStorage.setItem('authToken', token); // Saves the authentication token to local storage\n\t\tlocalStorage.setItem('userName', userName); // Save the user name to local storage\n\t\tlocalStorage.setItem('userEmail', email); // Save email to local storage\n        navigate(`/WelcomeUser/${userId}`);\n    };\n\n    // Function to handle the form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(inputs);\n\n        try {\n            const data = await sendRequest();\n            // Passes the user's ID and token to the /welcome page when logging in\n            handleSuccessfulLogin(data._id, data.token, data.name, data.email);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n  return (\n\t<>\n\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\tLog in to Scheduler131\n\t\t\t</h2>\n\t\t</div>\n\n\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\tEmail address\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t>\n\t\t\t\t\tLog in\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\tDon't have an account?{' '}\n\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\tRegister here\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n\t{/*\n\t<footer>\n\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\n\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t</div>\n\t</footer>\n  \t*/}\n    </>\n  )\n}\n","/Users/ajays/Documents/Scheduler131-1/main/src/util/UserPage.js",["185","186","187"],[],"import React, { useState, useEffect } from \"react\";\nimport { generateDate, months } from \"./Calendar\";\nimport cn from \"./cn\";\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport dayjs from \"dayjs\";\nimport MeetingPopup from './MeetingPopup';\n\nexport default function UserPage() {\n  const days = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n  const currentDate = dayjs();\n  const [today, setToday] = useState(currentDate);\n  const [selectDate, setSelectDate] = useState(currentDate);\n  const { userId } = useParams();\n\n  const [joinCodes, setJoinCodes] = useState([]); //holds join codes\n  const [meetings, setMeetings] = useState([]); //holds meetings\n  const [showPopup, setShowPopup] = useState({ visible: false, date: null });\n  const [selectedMeeting, setSelectedMeeting] = useState(null);\n  \n\n  useEffect(() => {\n    const fetchUserRooms = async () => {\n      try {\n        const userTokenHere = localStorage.getItem(\"authToken\");\n        const response = await axios.get(`http://localhost:8080/api/user/${userId}/rooms`, {\n          headers: {\n            Authorization: `Bearer ${userTokenHere}`,\n          },\n        });\n\n        const userJoinCodes = response.data.map(room => room.joincode);\n        setJoinCodes(userJoinCodes);\n\n\n        fetchMeetingsForDate(selectDate); \n      } catch (error) {\n        console.error('Error fetching user rooms:', error.response?.data?.message || error.message);\n      }\n    };\n\n    fetchUserRooms();\n  }, [selectDate, userId]);\n\n  useEffect(() => {\n    fetchMeetingsForDate(selectDate);\n  }, [selectDate, joinCodes]);\n\n  const fetchMeetingsForDate = async (date) => {\n    try {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const allMeetings = await Promise.all(\n        joinCodes.map(async (joinCode) => {\n          const response = await axios.get(`http://localhost:8080/api/meetings/${joinCode}`, {\n            headers: {\n              Authorization: `Bearer ${userTokenHere}`,\n            },\n            params: {\n              date: date.format(\"YYYY-MM-DD\"),\n            },\n          });\n          return response.data.meetings; \n        })\n      );\n\n\n      const flatMeetings = [].concat(...allMeetings);\n\n      setMeetings(flatMeetings || []);\n    } catch (error) {\n      console.error('Error fetching meetings:', error.response?.data?.message || error.message);\n    }\n  };\n\n\n  //converting the meeting start and end times(because a normal user doesnt know what the 144 timeslots converts to lol):\n  const convertTimeSlotToTime = (timeSlot) => {\n    const totalMinutes = timeSlot * 10;\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n  \n    //AM PM STUFFS\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    const formattedMinutes = String(minutes).padStart(2, '0');\n  \n    return `${formattedHours}:${formattedMinutes} ${period}`;\n  };\n\n  \n  return (\n    <div className=\"flex gap-10 sm:divide-x justify-center px-6 py-12 sm:w-1/2 mx-auto items-center sm:flex-row flex-col\">\n      <div className=\"w-96 h-96 \">\n        <div className=\"flex justify-between items-center pb-4\">\n          <h1 className=\"select-none font-semibold\">\n            {months[today.month()]}, {today.year()}\n          </h1>\n          <div className=\"flex gap-10 items-center \">\n            <GrFormPrevious\n              className=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n              onClick={() => {\n                setToday(today.month(today.month() - 1));\n              }}\n            />\n            <h1\n              className=\" cursor-pointer hover:scale-105 transition-all\"\n              onClick={() => {\n                setToday(currentDate);\n              }}\n            >\n              Today\n            </h1>\n            <GrFormNext\n              className=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n              onClick={() => {\n                setToday(today.month(today.month() + 1));\n              }}\n            />\n          </div>\n        </div>\n        <div className=\" grid grid-cols-7\">\n        {generateDate(today.month(), today.year(), meetings).map(\n          ({ date, currentMonth, today, hasMeeting }, index) => {\n            return (\n              <div\n                key={index}\n                className=\"p-2 text-center h-14 grid place-content-center text-sm border-t\"\n              >\n                <h1\n                  className={cn(\n                    currentMonth ? '' : 'text-gray-400',\n                    today ? 'bg-red-600 text-white' : '',\n                    selectDate.toDate().toDateString() ===\n                    date.toDate().toDateString()\n                      ? 'bg-black text-white'\n                      : '',\n                    hasMeeting ? 'bg-green-500 text-white' : '',\n                    'h-10 w-10 rounded-full grid place-content-center hover:bg-black hover:text-white transition-all cursor-pointer select-none'\n                  )}\n                  onClick={() => {\n                    if (hasMeeting) {\n                      setShowPopup({ visible: true, date: date });\n                      setSelectedMeeting(meetings.find(\n                        (meeting) =>\n                          meeting.day === date.format('MM-DD-YYYY')\n                      ));\n                    }\n                    setSelectDate(date);\n                  }}                  \n                >\n                  {date.date()}\n                </h1>\n              </div>\n            );\n          })}\n      </div>\n      {showPopup.visible && selectedMeeting && (\n        <MeetingPopup meeting={selectedMeeting} onClose={() => setShowPopup({ visible: false, date: null })} />\n      )}\n      </div>\n\n      <div className=\"h-96 w-96 sm:px-5\">\n         {/*<h1 className=\"font-semibold\">Schedule for {selectDate.toDate().toDateString()}</h1> */}{/*old display next to calendar*/}\n        <h1 className=\"font-semibold flex justify-center items-center pb-4 border-b\">Scheduled Meetings</h1>\n        {meetings.length > 0 ? (\n          <ul className=\"pt-2\">\n            {meetings.map((meeting, index) => (\n              <li key={meeting._id}>\n                <div className=\"font-sans-serif bg-red-100 p-2.5 rounded-md mb-3 text-center\">\n                  <p>Date: {meeting.day}</p>\n                  <p>Start Time: {convertTimeSlotToTime(meeting.start)}</p>\n                  <p>End Time: {convertTimeSlotToTime(meeting.end)}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"text-gray-400\">No meetings for today.</p>\n        )}\n      </div>\n    </div>\n  );\n}","/Users/ajays/Documents/Scheduler131-1/main/src/util/Calendar.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/cn.js",[],[],"/Users/ajays/Documents/Scheduler131-2/main/src/index.js",[],[],["188"],"/Users/ajays/Documents/Scheduler131-2/main/src/App.js",["189","190"],[],"import React from 'react';\nimport { Route, Routes, Navigate, useLocation } from 'react-router-dom';  // Add useLocation import\nimport Header from './Header';\nimport UserPageHeader from './UserPageHeader';\nimport Home from './util/Home';\nimport UserPage from './util/UserPage';\nimport Login from './util/Login';\nimport Register from './util/Register';\nimport Room from './util/Room';\n\nexport default function App() {\n  const location = useLocation();\n  const routesWithoutHeader = ['/login', '/register'];\n\n  // Check if the current route should display the UserPageHeader\n  const shouldDisplayUserPageHeader =\n    location.pathname.startsWith('/WelcomeUser') || location.pathname.startsWith('/room');\n\n  return (\n    <React.Fragment>\n      {shouldDisplayUserPageHeader ? <UserPageHeader /> : <Header />}\n      \n      <Routes>\n        {/* root path (\"/\") to \"/login\" */}\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/room\" element={<Room />} />\n       \n\n        {/*Basically the UserPage will display UserPageHeader instead of Header*/}\n        <Route\n          path=\"/WelcomeUser/:userId\"\n          element={<UserPage shouldDisplayHeader={!shouldDisplayUserPageHeader} />}\n        />\n      </Routes>\n    </React.Fragment>\n  );\n}\n\n","/Users/ajays/Documents/Scheduler131-2/main/src/reportWebVitals.js",[],[],"/Users/ajays/Documents/Scheduler131-2/main/src/Header.js",["191","192","193","194","195","196","197","198"],[],"/*\nUpdated: 11/12/23 by Ajay\nWork in progress: The user dropdown (where log-in link will be embedded), register page connection with backend, dark mode toggle, footer section should be equally setup on all the pages\n*/\n\n\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src= {logo} alt=\"\" />\n          </Link>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n          <a href=\"#\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n          {/*Divides out the navbar*/}\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\n         \n          {/*Dropdown menu*/}\n          <div id=\"dropdown\" class=\"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600\">\n              <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Settings</a>\n                </li>\n                <li>\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Delete</a>\n                </li>\n              </ul>\n              <div class=\"py-2\">\n                <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">Log in</a>\n              </div>\n          </div>\n\n          \n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a\n                  href= \"https://discord.gg/FuHSV3XRrf\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Discord\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                >\n                  Schedule\n                </a>\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n            <p className=\"text-sm leading-6 text-gray-900\">\n              Stay up to date with your meetings by registering now.\n            </p>\n            <Link to=\"/register\" className=\"flex-none rounded-full bg-gray-900 px-3.5 py-1 text-sm font-semibold text-white shadow-sm hover:bg-gray-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900\">\n              Register now <span aria-hidden=\"true\">&rarr;</span>\n            </Link>\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}\n","/Users/ajays/Documents/Scheduler131-2/main/src/UserPageHeader.js",["199","200","201","202","203","204"],[],"/*Essentially a duplicate of the header, however this one is tweaked for UserPage.\nThis is because we dont want to see the login or register buttons when we are logged in already*/\nimport React from 'react';\nimport logo from './util/images/logo.PNG';\nimport Login from './util/Login.js';\nimport { Fragment, useState } from 'react';\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\nimport {\n  ArrowPathIcon,\n  Bars3Icon,\n  ChartPieIcon,\n  CursorArrowRaysIcon,\n  FingerPrintIcon,\n  SquaresPlusIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\nimport { Link} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\"; // Import useNavigate and useParams\nimport axios from \"axios\"; // Import axios\n\n\n\n\nconst About = [\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\n]\nconst callsToAction = [\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function UserPageHeader() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n\n  const handleDeleteAccount = async () => {\n    // Display a confirmation dialog\n    const confirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n  \n    // If the user confirms, proceed with the deletion\n    if (confirmed) {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const userId = localStorage.getItem(\"userId\"); // Get userId from local storage\n  \n      try {\n        await axios.delete(`http://localhost:8080/api/user/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userTokenHere}`,\n          },\n        });\n  \n        //need to clear out local tokens since it auto logs them out afterwards and can be security risk\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('userEmail');\n        console.log(\"User has been deleted\");\n        // Redirect to login page after successful deletion\n        navigate(\"/login\");\n      } catch (error) {\n        console.error(\"Error deleting user: \", error);\n      }\n    } else {\n      // The user clicks \"Cancel\" in the confirmation dialog\n      console.log(\"Account deletion cancelled.\");\n    }\n  };\n\n  //function to logout and clear local storage\n  const logout = () => {\n    // Clear all relevant keys from local storage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n  \n    // Navigate to the login page\n    navigate('/login');\n  };\n  \n\n\n\n  {/*const resolvedPath = useResolvedPath(to)\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\n\n  {/*Dark mode toggle */}\n  const HSThemeAppearance = {\n    init() {\n        const defaultTheme = 'default'\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\n\n        if (document.querySelector('html').classList.contains('dark')) return\n        this.setAppearance(theme)\n    },\n    _resetStylesOnLoad() {\n        const $resetStyles = document.createElement('style')\n        $resetStyles.innerText = `*{transition: unset !important;}`\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\n        document.head.appendChild($resetStyles)\n        return $resetStyles\n    },\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\n        const $resetStylesEl = this._resetStylesOnLoad()\n\n        if (saveInStore) {\n            localStorage.setItem('hs_theme', theme)\n        }\n\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n\n        document.querySelector('html').classList.remove('dark')\n        document.querySelector('html').classList.remove('default')\n        document.querySelector('html').classList.remove('auto')\n\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\n\n        setTimeout(() => {\n            $resetStylesEl.remove()\n        })\n\n        if (dispatchEvent) {\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\n        }\n    },\n    getAppearance() {\n        let theme = this.getOriginalAppearance()\n        if (theme === 'auto') {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\n        }\n        return theme\n    },\n    getOriginalAppearance() {\n        const defaultTheme = 'default'\n        return localStorage.getItem('hs_theme') || defaultTheme\n    }\n  }\n  HSThemeAppearance.init()\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\n        HSThemeAppearance.setAppearance('auto', false)\n    }\n  })\n\n  window.addEventListener('load', () => {\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\n\n    $clickableThemes.forEach($item => {\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\n    })\n\n    $switchableThemes.forEach($item => {\n        $item.addEventListener('change', (e) => {\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\n        })\n\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\n    })\n\n    window.addEventListener('on-hs-appearance-change', e => {\n        $switchableThemes.forEach($item => {\n            $item.checked = e.detail === 'dark'\n        })\n    })\n  })\n\n\n  return (\n    <header className=\"bg-white\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n\t\t\t\n        <div onClick={() => navigate(`/WelcomeUser/${localStorage.getItem('userId')}`)} className=\"-m-1.5 p-1.5 cursor-pointer\">\n            <span className=\"sr-only\">Scheduler131</span>\n            <img className=\"h-8 w-auto\" src={logo} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\n          <Popover className=\"relative\">\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n              About\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n            </Popover.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\n                <div className=\"p-4\">\n                  {About.map((item) => (\n                    <div\n                      key={item.name}\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\n                    >\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"flex-auto\">\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\n                          {item.name}\n                          <span className=\"absolute inset-0\" />\n                        </a>\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\n                  {callsToAction.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\n                    >\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \n            Discord\n          </a>\n         \n          <a href=\"\" onClick={() => navigate(\"/room\")} className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n            Schedule\n          </a>\n\n\n        </Popover.Group>\n        \n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\n          </button>\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\n          </button>\n          \n          {/*Divides out the navbar*/}\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\n    \n          {/* User settings dropdown */}\n          <div className=\"relative\">\n            <button\n              id=\"dropdownDividerButton\"\n              data-dropdown-toggle=\"dropdownDivider\"\n              className=\"text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              type=\"button\"\n              onClick={toggleDropdown}\n            >\n              User settings{' '}\n              <svg\n                className={`w-2.5 h-2.5 ms-3 ${dropdownOpen ? 'rotate-180' : ''}`}\n                aria-hidden=\"true\"\n                fill=\"none\"\n                viewBox=\"0 0 10 6\"\n              >\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 1 4 4 4-4\" />\n              </svg>\n            </button>\n\n            {/* Dropdown menu */}\n            <div\n              id=\"dropdown\"\n              className={`absolute z-10 ${dropdownOpen ? 'block' : 'hidden'} bg-red-100 border border-red-300 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600 mt-2`}\n              style={{ width: 'calc(100%)' }}\n            >\n              <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\n                <li>\n                  {/* dropdown options below */}\n                </li>\n                <li>\n                   {/* delete account*/}\n                   <a\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                      onClick={handleDeleteAccount}\n                    >\n                      Delete Account\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2\">\n                {/* logout*/}\n                <a\n                  to=\"/login\"\n                  className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                  onClick = { logout }\n               >\n                  Log out\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n\n\n      {/*Minimized Version*/}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\n              <span className=\"sr-only\">Scheduler131</span>\n              <img\n                className=\"h-8 w-auto\"\n                src= {logo}\n                alt=\"\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\n              <div className=\"space-y-2 py-6\">\n                <Disclosure as=\"div\" className=\"-mx-3\">\n                  {({ open }) => (\n                    <>\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\n                        About\n                        <ChevronDownIcon\t\t\t\t\t\t\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\n                          aria-hidden=\"true\"\n                        />\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\n                        {[...About, ...callsToAction].map((item) => (\n                          <Disclosure.Button\n                            key={item.name}\n                            as=\"a\"\n                            href={item.href}\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\n                          >\n                            {item.name}\n                          </Disclosure.Button>\n                        ))}\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n                <a href= \"https://discord.gg/FuHSV3XRrf\"className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\" >  Discord\n                </a>\n                <Link to=\"/room\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\n                  Schedule\n                </Link>\n\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n\n\n      {/*Banner Section*/}\n        \n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\n            <div\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\n              style={{\n                clipPath:\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\n              }}\n            />\n          </div>\n\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\n          <p className=\"text-sm leading-6 text-gray-900\" style={{ whiteSpace: 'pre' }}>\n              Welcome User!     Note: In the future, want to display the username instead of \"user\"\n          </p>\n\n          </div>\n\n          <div className=\"flex flex-1 justify-end\">\n          {/* button tag for dismissing the registeration banner\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\n              <span className=\"sr-only\">Dismiss</span>\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\n            </button> \n          */}      \n          </div>\n          \n        </div>  \n      \n    </header>\n    \n  )\n}","/Users/ajays/Documents/Scheduler131-2/main/src/util/Register.js",["205"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link} from \"react-router-dom\";\n\n\n\n\nexport default function Register() {\n\n\tconst navigate = useNavigate(); // useNavigate provides navigation functionality\n\tconst [inputs, setInputs] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst handleChange = (e) => {\n\t\tsetInputs((prev) => ({\n\t\t...prev,\n\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst sendRequest = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/register\", {\n\t\t\t\tname: inputs.name,\n\t\t\t\temail: inputs.email,\n\t\t\t\tpassword: inputs.password,\n\t\t\t});\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(inputs);\n\t\t//send http request\n\t\ttry {\n\t\t\tconst data = await sendRequest();\n\t\t\t// Navigate to login page after successful registration\n\t\t\tnavigate('/login');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\t\tRegister an account\n\t\t\t\t</h2>\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\t\t\tautoComplete=\"name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\tRegister \n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\t\tAlready have an account?{' '}\n\t\t\t\t\t<Link to=\"/login\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tLog in here\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<footer>\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-10\">\n\t\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t\t</div>\n\t  \t</footer>\n\t\t</>\n\t)\n}","/Users/ajays/Documents/Scheduler131-2/main/src/util/Home.js",["206","207","208","209"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\n\n\nexport default function Home() {\n\tconst navigate = useNavigate();\n\n\t//Manages input\n\tconst [inputs, setInputs] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\t// Function to handle input changes\n\tconst handleChange = (e) => {\n\t\tsetInputs((prev) => ({\n\t\t\t...prev,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\t// Function to send a login request to the server using post\n\tconst sendRequest = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/login\", {\n\t\t\t\temail: inputs.email,\n\t\t\t\tpassword: inputs.password,\n\t\t\t});\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\t// Function to handle a login\n\tconst handleSuccessfulLogin = async (userId) => {\n\t\tnavigate(`/WelcomeUser/${userId}`);\n\t};\n\n\t// Function to handle the form submission\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(inputs);\n\n\t\ttry {\n\t\t\tconst data = await sendRequest();\n\t\t\t//Passes the user's ID to the /welcome page when logging in\n\t\t\thandleSuccessfulLogin(data._id);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\t\n\t{/*<div className = \"App\"> </div> --removed this*/ }\n\n\treturn (\n\t\t<>\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\t\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\t\tLog in to Scheduler131\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</form>\n\t\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\t\tDon't have an account?{' '}\n\t\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tRegister here\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<footer>\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\n\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t\t</div>\n\t\t</footer>\n\t\t</>\n\t  )\n\t}\n\t","/Users/ajays/Documents/Scheduler131-2/main/src/util/Login.js",["210","211","212"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\n\n\nexport default function Login() {\n\tconst navigate = useNavigate();\n\n    // Manages input\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    // Function to handle input changes\n    const handleChange = (e) => {\n        setInputs((prev) => ({\n            ...prev,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    // Function to send a login request to the server using post\n    const sendRequest = async () => {\n        try {\n            const res = await axios.post(\"http://localhost:8080/api/user/login\", {\n                email: inputs.email,\n                password: inputs.password,\n            });\n            const data = res.data;\n            localStorage.setItem('authToken', data.token);  // Store the token in localStorage\n\n            return data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n    // Function to handle a login\n    const handleSuccessfulLogin = async (userId, token) => {\n\t\tlocalStorage.setItem('userId', userId); // Save userId to local storage\n        localStorage.setItem('authToken', token); // Saves the authentication token to local storage\n        navigate(`/WelcomeUser/${userId}`);\n    };\n\n    // Function to handle the form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(inputs);\n\n        try {\n            const data = await sendRequest();\n            // Passes the user's ID and token to the /welcome page when logging in\n            handleSuccessfulLogin(data._id, data.token);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n  return (\n\t<>\n\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\n\n\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n\t\t\tLog in to Scheduler131\n\t\t\t</h2>\n\t\t</div>\n\n\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\tEmail address\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\n\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n\t\t\t\t\t>\n\t\t\t\t\tLog in\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\n\t\t\t\tDon't have an account?{' '}\n\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\n\t\t\t\t\tRegister here\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n\t<footer>\n\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\n\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\n\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\n\t\t</div>\n\t</footer>\n    </>\n  )\n}\n","/Users/ajays/Documents/Scheduler131-2/main/src/util/UserPage.js",["213","214"],[],"//This is the page in which the user will see, and it will show all user permisions and allow them to schedule\nimport dayjs from \"dayjs\";\nimport React, { useState } from \"react\";\nimport { generateDate, months } from \"./Calendar\";\nimport cn from \"./cn\";\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nexport default function UserPage() {\n\t\n\tconst days = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n\tconst currentDate = dayjs();\n\tconst [today, setToday] = useState(currentDate);\n\tconst [selectDate, setSelectDate] = useState(currentDate);\n\tconst { userId } = useParams();\n\n\n\treturn (\n\t\t\n    \n\t<div className=\"flex gap-10 sm:divide-x justify-center px-6 py-12 sm:w-1/2 mx-auto items-center sm:flex-row flex-col\">\n\t\t<div className=\"w-96 h-96 \">\n\t\t\t<div className=\"flex justify-between items-center\">\n\t\t\t\t<h1 className=\"select-none font-semibold\">\n\t\t\t\t\t{months[today.month()]}, {today.year()}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"flex gap-10 items-center \">\n\t\t\t\t\t<GrFormPrevious\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(today.month(today.month() - 1));\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<h1\n\t\t\t\t\tclassName=\" cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(currentDate);\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\tToday\n\t\t\t\t\t</h1>\n\t\t\t\t\t<GrFormNext\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToday(today.month(today.month() + 1));\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-7 \">\n\t\t\t{days.map((day, index) => {\n\t\t\t\treturn (\n\t\t\t\t<h1\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName=\"text-sm text-center h-14 w-14 grid place-content-center text-gray-500 select-none\"\n\t\t\t\t>\n\t\t\t\t\t{day}\n\t\t\t\t</h1>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t</div>\n\n\t\t\t<div className=\" grid grid-cols-7 \">\n\t\t\t{generateDate(today.month(), today.year()).map(\n\t\t\t\t({ date, currentMonth, today }, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName=\"p-2 text-center h-14 grid place-content-center text-sm border-t\"\n\t\t\t\t\t>\n\t\t\t\t\t<h1\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tcurrentMonth ? \"\" : \"text-gray-400\",\n\t\t\t\t\t\ttoday\n\t\t\t\t\t\t\t? \"bg-red-600 text-white\"\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\tselectDate\n\t\t\t\t\t\t\t.toDate()\n\t\t\t\t\t\t\t.toDateString() ===\n\t\t\t\t\t\t\tdate.toDate().toDateString()\n\t\t\t\t\t\t\t? \"bg-black text-white\"\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\"h-10 w-10 rounded-full grid place-content-center hover:bg-black hover:text-white transition-all cursor-pointer select-none\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSelectDate(date);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{date.date()}\n\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div className=\"h-96 w-96 sm:px-5\">\n\t\t\t<h1 className=\" font-semibold\">\n\t\t\tSchedule for {selectDate.toDate().toDateString()}\n\t\t\t</h1>\n            <p className=\"text-gray-400\">No meetings for today.</p>\n\t\t\t\n\t\t</div>\n\t</div>\n\t);\n}\n\n","/Users/ajays/Documents/Scheduler131-2/main/src/util/Room.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],[],"/Users/ajays/Documents/Scheduler131-2/main/src/util/Calendar.js",[],[],"/Users/ajays/Documents/Scheduler131-2/main/src/util/cn.js",[],[],"/Users/ajays/Documents/Scheduler131-1/main/src/util/MeetingPopup.js",[],[],{"ruleId":"238","severity":1,"message":"239","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":12},{"ruleId":"238","severity":1,"message":"242","line":13,"column":9,"nodeType":"240","messageId":"241","endLine":13,"endColumn":28},{"ruleId":"238","severity":1,"message":"243","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":101,"column":3,"nodeType":"246","messageId":"247","endLine":102,"endColumn":74},{"ruleId":"244","severity":1,"message":"245","line":104,"column":3,"nodeType":"246","messageId":"247","endLine":104,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":265,"column":11,"nodeType":"250","endLine":265,"endColumn":159},{"ruleId":"248","severity":1,"message":"251","line":319,"column":17,"nodeType":"250","endLine":322,"endColumn":18},{"ruleId":"248","severity":1,"message":"251","line":330,"column":17,"nodeType":"250","endLine":334,"endColumn":18},{"ruleId":"238","severity":1,"message":"243","line":9,"column":8,"nodeType":"240","messageId":"241","endLine":9,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":43,"column":3,"nodeType":"246","messageId":"247","endLine":44,"endColumn":74},{"ruleId":"244","severity":1,"message":"245","line":46,"column":3,"nodeType":"246","messageId":"247","endLine":46,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":206,"column":11,"nodeType":"250","endLine":206,"endColumn":126},{"ruleId":"248","severity":1,"message":"249","line":224,"column":19,"nodeType":"250","endLine":224,"endColumn":118},{"ruleId":"248","severity":1,"message":"249","line":227,"column":19,"nodeType":"250","endLine":227,"endColumn":118},{"ruleId":"248","severity":1,"message":"249","line":231,"column":17,"nodeType":"250","endLine":231,"endColumn":157},{"ruleId":"248","severity":1,"message":"249","line":298,"column":17,"nodeType":"250","endLine":301,"endColumn":18},{"ruleId":"252","replacedBy":"253"},{"ruleId":"238","severity":1,"message":"254","line":4,"column":16,"nodeType":"240","messageId":"241","endLine":4,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":4,"column":26,"nodeType":"240","messageId":"241","endLine":4,"endColumn":41},{"ruleId":"244","severity":1,"message":"245","line":57,"column":2,"nodeType":"246","messageId":"247","endLine":57,"endColumn":54},{"ruleId":"248","severity":1,"message":"249","line":95,"column":8,"nodeType":"250","endLine":95,"endColumn":81},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":23},{"ruleId":"238","severity":1,"message":"257","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":22},{"ruleId":"238","severity":1,"message":"258","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":22},{"ruleId":"238","severity":1,"message":"259","line":12,"column":10,"nodeType":"240","messageId":"241","endLine":12,"endColumn":20},{"ruleId":"238","severity":1,"message":"260","line":12,"column":22,"nodeType":"240","messageId":"241","endLine":12,"endColumn":28},{"ruleId":"238","severity":1,"message":"261","line":22,"column":10,"nodeType":"240","messageId":"241","endLine":22,"endColumn":26},{"ruleId":"238","severity":1,"message":"262","line":22,"column":28,"nodeType":"240","messageId":"241","endLine":22,"endColumn":47},{"ruleId":"238","severity":1,"message":"263","line":27,"column":9,"nodeType":"240","messageId":"241","endLine":27,"endColumn":17},{"ruleId":"238","severity":1,"message":"264","line":39,"column":9,"nodeType":"240","messageId":"241","endLine":39,"endColumn":18},{"ruleId":"238","severity":1,"message":"265","line":40,"column":11,"nodeType":"240","messageId":"241","endLine":40,"endColumn":20},{"ruleId":"238","severity":1,"message":"266","line":186,"column":7,"nodeType":"240","messageId":"241","endLine":186,"endColumn":23},{"ruleId":"238","severity":1,"message":"267","line":210,"column":10,"nodeType":"240","messageId":"241","endLine":210,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":214,"column":9,"nodeType":"240","messageId":"241","endLine":214,"endColumn":15},{"ruleId":"238","severity":1,"message":"269","line":218,"column":9,"nodeType":"240","messageId":"241","endLine":218,"endColumn":14},{"ruleId":"238","severity":1,"message":"270","line":222,"column":9,"nodeType":"240","messageId":"241","endLine":222,"endColumn":16},{"ruleId":"238","severity":1,"message":"271","line":225,"column":12,"nodeType":"240","messageId":"241","endLine":225,"endColumn":23},{"ruleId":"238","severity":1,"message":"272","line":332,"column":11,"nodeType":"240","messageId":"241","endLine":332,"endColumn":17},{"ruleId":"238","severity":1,"message":"273","line":44,"column":10,"nodeType":"240","messageId":"241","endLine":44,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":4,"column":16,"nodeType":"240","messageId":"241","endLine":4,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":4,"column":26,"nodeType":"240","messageId":"241","endLine":4,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":100,"column":7,"nodeType":"250","endLine":100,"endColumn":80},{"ruleId":"238","severity":1,"message":"274","line":11,"column":9,"nodeType":"240","messageId":"241","endLine":11,"endColumn":13},{"ruleId":"275","severity":1,"message":"276","line":44,"column":6,"nodeType":"277","endLine":44,"endColumn":26,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"276","line":48,"column":6,"nodeType":"277","endLine":48,"endColumn":29,"suggestions":"279"},{"ruleId":"252","replacedBy":"280"},{"ruleId":"238","severity":1,"message":"239","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":12},{"ruleId":"238","severity":1,"message":"242","line":13,"column":9,"nodeType":"240","messageId":"241","endLine":13,"endColumn":28},{"ruleId":"238","severity":1,"message":"243","line":9,"column":8,"nodeType":"240","messageId":"241","endLine":9,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":43,"column":3,"nodeType":"246","messageId":"247","endLine":44,"endColumn":74},{"ruleId":"244","severity":1,"message":"245","line":46,"column":3,"nodeType":"246","messageId":"247","endLine":46,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":206,"column":11,"nodeType":"250","endLine":206,"endColumn":126},{"ruleId":"248","severity":1,"message":"249","line":226,"column":19,"nodeType":"250","endLine":226,"endColumn":118},{"ruleId":"248","severity":1,"message":"249","line":229,"column":19,"nodeType":"250","endLine":229,"endColumn":118},{"ruleId":"248","severity":1,"message":"249","line":233,"column":17,"nodeType":"250","endLine":233,"endColumn":157},{"ruleId":"248","severity":1,"message":"249","line":300,"column":17,"nodeType":"250","endLine":303,"endColumn":18},{"ruleId":"238","severity":1,"message":"243","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":100,"column":3,"nodeType":"246","messageId":"247","endLine":101,"endColumn":74},{"ruleId":"244","severity":1,"message":"245","line":103,"column":3,"nodeType":"246","messageId":"247","endLine":103,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":264,"column":11,"nodeType":"250","endLine":264,"endColumn":159},{"ruleId":"248","severity":1,"message":"251","line":314,"column":20,"nodeType":"250","endLine":317,"endColumn":22},{"ruleId":"248","severity":1,"message":"251","line":324,"column":17,"nodeType":"250","endLine":328,"endColumn":17},{"ruleId":"238","severity":1,"message":"273","line":44,"column":10,"nodeType":"240","messageId":"241","endLine":44,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":4,"column":16,"nodeType":"240","messageId":"241","endLine":4,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":4,"column":26,"nodeType":"240","messageId":"241","endLine":4,"endColumn":41},{"ruleId":"244","severity":1,"message":"245","line":57,"column":2,"nodeType":"246","messageId":"247","endLine":57,"endColumn":54},{"ruleId":"248","severity":1,"message":"249","line":95,"column":8,"nodeType":"250","endLine":95,"endColumn":81},{"ruleId":"238","severity":1,"message":"254","line":4,"column":16,"nodeType":"240","messageId":"241","endLine":4,"endColumn":24},{"ruleId":"238","severity":1,"message":"255","line":4,"column":26,"nodeType":"240","messageId":"241","endLine":4,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":98,"column":7,"nodeType":"250","endLine":98,"endColumn":80},{"ruleId":"238","severity":1,"message":"281","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":13},{"ruleId":"238","severity":1,"message":"272","line":18,"column":10,"nodeType":"240","messageId":"241","endLine":18,"endColumn":16},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":23},{"ruleId":"238","severity":1,"message":"257","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":22},{"ruleId":"238","severity":1,"message":"258","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":22},{"ruleId":"238","severity":1,"message":"282","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"238","severity":1,"message":"283","line":9,"column":18,"nodeType":"240","messageId":"241","endLine":9,"endColumn":26},{"ruleId":"238","severity":1,"message":"259","line":12,"column":10,"nodeType":"240","messageId":"241","endLine":12,"endColumn":20},{"ruleId":"238","severity":1,"message":"260","line":12,"column":22,"nodeType":"240","messageId":"241","endLine":12,"endColumn":28},{"ruleId":"238","severity":1,"message":"284","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":18},{"ruleId":"238","severity":1,"message":"261","line":32,"column":10,"nodeType":"240","messageId":"241","endLine":32,"endColumn":26},{"ruleId":"238","severity":1,"message":"262","line":32,"column":28,"nodeType":"240","messageId":"241","endLine":32,"endColumn":47},{"ruleId":"238","severity":1,"message":"263","line":37,"column":9,"nodeType":"240","messageId":"241","endLine":37,"endColumn":17},{"ruleId":"238","severity":1,"message":"285","line":39,"column":10,"nodeType":"240","messageId":"241","endLine":39,"endColumn":14},{"ruleId":"238","severity":1,"message":"286","line":39,"column":16,"nodeType":"240","messageId":"241","endLine":39,"endColumn":23},{"ruleId":"238","severity":1,"message":"287","line":40,"column":10,"nodeType":"240","messageId":"241","endLine":40,"endColumn":12},{"ruleId":"238","severity":1,"message":"288","line":40,"column":14,"nodeType":"240","messageId":"241","endLine":40,"endColumn":19},{"ruleId":"238","severity":1,"message":"266","line":163,"column":7,"nodeType":"240","messageId":"241","endLine":163,"endColumn":23},{"ruleId":"244","severity":1,"message":"245","line":179,"column":1,"nodeType":"246","messageId":"247","endLine":201,"endColumn":6},{"ruleId":"238","severity":1,"message":"289","line":209,"column":10,"nodeType":"240","messageId":"241","endLine":209,"endColumn":22},{"ruleId":"238","severity":1,"message":"290","line":212,"column":29,"nodeType":"240","messageId":"241","endLine":212,"endColumn":49},{"ruleId":"238","severity":1,"message":"291","line":213,"column":27,"nodeType":"240","messageId":"241","endLine":213,"endColumn":45},{"ruleId":"238","severity":1,"message":"264","line":233,"column":9,"nodeType":"240","messageId":"241","endLine":233,"endColumn":18},{"ruleId":"238","severity":1,"message":"265","line":234,"column":11,"nodeType":"240","messageId":"241","endLine":234,"endColumn":20},{"ruleId":"248","severity":1,"message":"249","line":329,"column":13,"nodeType":"250","endLine":331,"endColumn":14},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'routesWithoutHeader' is assigned a value but never used.","'Login' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-new-object",["292"],"'useMatch' is defined but never used.","'useResolvedPath' is defined but never used.","'useRef' is defined but never used.","'TimezoneSelect' is defined but never used.","'DateTimePicker' is defined but never used.","'Timepicker' is defined but never used.","'initTE' is defined but never used.","'selectedtimezone' is assigned a value but never used.","'setSelectedTimezone' is assigned a value but never used.","'navigate' is assigned a value but never used.","'SplitDate' is assigned a value but never used.","'arrayDate' is assigned a value but never used.","'fetchUserDetails' is assigned a value but never used.","'range' is assigned a value but never used.","'ranges' is assigned a value but never used.","'local' is assigned a value but never used.","'maxDate' is assigned a value but never used.","'handleApply' is defined but never used.","'userId' is assigned a value but never used.","'data' is assigned a value but never used.","'days' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMeetingsForDate'. Either include it or remove the dependency array.","ArrayExpression",["293"],["294"],["292"],"'axios' is defined but never used.","'moment' is defined but never used.","'addHours' is defined but never used.","'TimePicker' is defined but never used.","'from' is assigned a value but never used.","'setFrom' is assigned a value but never used.","'to' is assigned a value but never used.","'setTo' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'setSelectedStartTime' is assigned a value but never used.","'setSelectedEndTime' is assigned a value but never used.","no-object-constructor",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [fetchMeetingsForDate, selectDate, userId]",{"range":"299","text":"300"},"Update the dependencies array to be: [selectDate, joinCodes, fetchMeetingsForDate]",{"range":"301","text":"302"},[1532,1552],"[fetchMeetingsForDate, selectDate, userId]",[1619,1642],"[selectDate, joinCodes, fetchMeetingsForDate]"]