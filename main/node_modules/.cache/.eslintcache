[{"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\index.js":"1","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\reportWebVitals.js":"2","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\App.js":"3","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\Header.js":"4","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\UserPageHeader.js":"5","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Home.js":"6","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Room.js":"7","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\UserPage.js":"8","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Register.js":"9","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Login.js":"10","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\cn.js":"11","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Calendar.js":"12"},{"size":656,"mtime":1700623116355,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1700623116355,"results":"15","hashOfConfig":"14"},{"size":1420,"mtime":1701587980687,"results":"16","hashOfConfig":"14"},{"size":16838,"mtime":1700623116354,"results":"17","hashOfConfig":"14"},{"size":19929,"mtime":1701242679585,"results":"18","hashOfConfig":"14"},{"size":4386,"mtime":1701243851569,"results":"19","hashOfConfig":"14"},{"size":13098,"mtime":1701603409444,"results":"20","hashOfConfig":"14"},{"size":2993,"mtime":1701241846533,"results":"21","hashOfConfig":"14"},{"size":4607,"mtime":1701221203022,"results":"22","hashOfConfig":"14"},{"size":4795,"mtime":1701241611382,"results":"23","hashOfConfig":"14"},{"size":87,"mtime":1700623116358,"results":"24","hashOfConfig":"14"},{"size":1241,"mtime":1700623116357,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"jf6wp1",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\index.js",[],[],["70"],"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\reportWebVitals.js",[],[],"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\App.js",["71","72"],[],"import React from 'react';\r\nimport { Route, Routes, Navigate, useLocation } from 'react-router-dom';  // Add useLocation import\r\nimport Header from './Header';\r\nimport UserPageHeader from './UserPageHeader';\r\nimport Home from './util/Home';\r\nimport UserPage from './util/UserPage';\r\nimport Login from './util/Login';\r\nimport Register from './util/Register';\r\nimport Room from './util/Room';\r\n\r\nexport default function App() {\r\n  const location = useLocation();\r\n  const routesWithoutHeader = ['/login', '/register'];\r\n\r\n  // Check if the current route should display the UserPageHeader\r\n  const shouldDisplayUserPageHeader =\r\n    location.pathname.startsWith('/WelcomeUser') || location.pathname.startsWith('/room');\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {shouldDisplayUserPageHeader ? <UserPageHeader /> : <Header />}\r\n      \r\n      <Routes>\r\n        {/* root path (\"/\") to \"/login\" */}\r\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/room\" element={<Room />} />\r\n       \r\n\r\n        {/*Basically the UserPage will display UserPageHeader instead of Header*/}\r\n        <Route\r\n          path=\"/WelcomeUser/:userId\"\r\n          element={<UserPage shouldDisplayHeader={!shouldDisplayUserPageHeader} />}\r\n        />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\Header.js",["73","74","75","76","77","78","79","80"],[],"/*\r\nUpdated: 11/12/23 by Ajay\r\nWork in progress: The user dropdown (where log-in link will be embedded), register page connection with backend, dark mode toggle, footer section should be equally setup on all the pages\r\n*/\r\n\r\n\r\nimport React from 'react';\r\nimport logo from './util/images/logo.PNG';\r\nimport Login from './util/Login.js';\r\nimport { Fragment, useState } from 'react';\r\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\r\nimport {\r\n  ArrowPathIcon,\r\n  Bars3Icon,\r\n  ChartPieIcon,\r\n  CursorArrowRaysIcon,\r\n  FingerPrintIcon,\r\n  SquaresPlusIcon,\r\n  XMarkIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\r\nimport { Link} from \"react-router-dom\";\r\n\r\nconst About = [\r\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\r\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\r\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\r\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\r\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\r\n]\r\nconst callsToAction = [\r\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\r\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\r\n]\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function Header() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\n  {/*const resolvedPath = useResolvedPath(to)\r\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\r\n\r\n  {/*Dark mode toggle */}\r\n  const HSThemeAppearance = {\r\n    init() {\r\n        const defaultTheme = 'default'\r\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\r\n\r\n        if (document.querySelector('html').classList.contains('dark')) return\r\n        this.setAppearance(theme)\r\n    },\r\n    _resetStylesOnLoad() {\r\n        const $resetStyles = document.createElement('style')\r\n        $resetStyles.innerText = `*{transition: unset !important;}`\r\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\r\n        document.head.appendChild($resetStyles)\r\n        return $resetStyles\r\n    },\r\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\r\n        const $resetStylesEl = this._resetStylesOnLoad()\r\n\r\n        if (saveInStore) {\r\n            localStorage.setItem('hs_theme', theme)\r\n        }\r\n\r\n        if (theme === 'auto') {\r\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\r\n        }\r\n\r\n        document.querySelector('html').classList.remove('dark')\r\n        document.querySelector('html').classList.remove('default')\r\n        document.querySelector('html').classList.remove('auto')\r\n\r\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\r\n\r\n        setTimeout(() => {\r\n            $resetStylesEl.remove()\r\n        })\r\n\r\n        if (dispatchEvent) {\r\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\r\n        }\r\n    },\r\n    getAppearance() {\r\n        let theme = this.getOriginalAppearance()\r\n        if (theme === 'auto') {\r\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\r\n        }\r\n        return theme\r\n    },\r\n    getOriginalAppearance() {\r\n        const defaultTheme = 'default'\r\n        return localStorage.getItem('hs_theme') || defaultTheme\r\n    }\r\n  }\r\n  HSThemeAppearance.init()\r\n\r\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\r\n        HSThemeAppearance.setAppearance('auto', false)\r\n    }\r\n  })\r\n\r\n  window.addEventListener('load', () => {\r\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\r\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\r\n\r\n    $clickableThemes.forEach($item => {\r\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\r\n    })\r\n\r\n    $switchableThemes.forEach($item => {\r\n        $item.addEventListener('change', (e) => {\r\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\r\n        })\r\n\r\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\r\n    })\r\n\r\n    window.addEventListener('on-hs-appearance-change', e => {\r\n        $switchableThemes.forEach($item => {\r\n            $item.checked = e.detail === 'dark'\r\n        })\r\n    })\r\n  })\r\n\r\n\r\n  return (\r\n    <header className=\"bg-white\">\r\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\r\n        <div className=\"flex lg:flex-1\">\r\n\t\t\t\r\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\r\n            <span className=\"sr-only\">Scheduler131</span>\r\n            <img className=\"h-8 w-auto\" src= {logo} alt=\"\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex lg:hidden\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\r\n            onClick={() => setMobileMenuOpen(true)}\r\n          >\r\n            <span className=\"sr-only\">Open main menu</span>\r\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\r\n          <Popover className=\"relative\">\r\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\r\n              About\r\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n            </Popover.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\r\n                <div className=\"p-4\">\r\n                  {About.map((item) => (\r\n                    <div\r\n                      key={item.name}\r\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\r\n                    >\r\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\r\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\r\n                      </div>\r\n                      <div className=\"flex-auto\">\r\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\r\n                          {item.name}\r\n                          <span className=\"absolute inset-0\" />\r\n                        </a>\r\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\r\n                  {callsToAction.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\r\n                    >\r\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </Popover>\r\n\r\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \r\n            Discord\r\n          </a>\r\n          <a href=\"#\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\r\n            Schedule\r\n          </a>\r\n        </Popover.Group>\r\n        \r\n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\r\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\r\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\r\n          </button>\r\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\r\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\r\n          </button>\r\n          \r\n          {/*Divides out the navbar*/}\r\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\r\n         \r\n          {/*Dropdown menu*/}\r\n          <div id=\"dropdown\" class=\"z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600\">\r\n              <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\r\n                <li>\r\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Settings</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">Delete</a>\r\n                </li>\r\n              </ul>\r\n              <div class=\"py-2\">\r\n                <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">Log in</a>\r\n              </div>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n      </nav>\r\n\r\n\r\n\r\n\r\n      {/*Minimized Version*/}\r\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\r\n        <div className=\"fixed inset-0 z-10\" />\r\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\r\n              <span className=\"sr-only\">Scheduler131</span>\r\n              <img\r\n                className=\"h-8 w-auto\"\r\n                src= {logo}\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <button\r\n              type=\"button\"\r\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\r\n              onClick={() => setMobileMenuOpen(false)}\r\n            >\r\n              <span className=\"sr-only\">Close menu</span>\r\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-6 flow-root\">\r\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\r\n              <div className=\"space-y-2 py-6\">\r\n                <Disclosure as=\"div\" className=\"-mx-3\">\r\n                  {({ open }) => (\r\n                    <>\r\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\r\n                        About\r\n                        <ChevronDownIcon\t\t\t\t\t\t\r\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </Disclosure.Button>\r\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\r\n                        {[...About, ...callsToAction].map((item) => (\r\n                          <Disclosure.Button\r\n                            key={item.name}\r\n                            as=\"a\"\r\n                            href={item.href}\r\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                          >\r\n                            {item.name}\r\n                          </Disclosure.Button>\r\n                        ))}\r\n                      </Disclosure.Panel>\r\n                    </>\r\n                  )}\r\n                </Disclosure>\r\n                <a\r\n                  href= \"https://discord.gg/FuHSV3XRrf\"\r\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                >\r\n                  Discord\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                >\r\n                  Schedule\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog.Panel>\r\n      </Dialog>\r\n\r\n\r\n      {/*Banner Section*/}\r\n        \r\n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\r\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\r\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\r\n              style={{\r\n                clipPath:\r\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\r\n            <div\r\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\r\n              style={{\r\n                clipPath:\r\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\r\n            <p className=\"text-sm leading-6 text-gray-900\">\r\n              Stay up to date with your meetings by registering now.\r\n            </p>\r\n            <Link to=\"/register\" className=\"flex-none rounded-full bg-gray-900 px-3.5 py-1 text-sm font-semibold text-white shadow-sm hover:bg-gray-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900\">\r\n              Register now <span aria-hidden=\"true\">&rarr;</span>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"flex flex-1 justify-end\">\r\n          {/* button tag for dismissing the registeration banner\r\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\r\n              <span className=\"sr-only\">Dismiss</span>\r\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\r\n            </button> \r\n          */}      \r\n          </div>\r\n          \r\n        </div>  \r\n      \r\n    </header>\r\n    \r\n  )\r\n}\r\n","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\UserPageHeader.js",["81","82","83","84","85","86"],[],"/*Essentially a duplicate of the header, however this one is tweaked for UserPage.\r\nThis is because we dont want to see the login or register buttons when we are logged in already*/\r\nimport React from 'react';\r\nimport logo from './util/images/logo.PNG';\r\nimport Login from './util/Login.js';\r\nimport { Fragment, useState } from 'react';\r\nimport { Dialog, Disclosure, Popover, Transition } from '@headlessui/react';\r\nimport {\r\n  ArrowPathIcon,\r\n  Bars3Icon,\r\n  ChartPieIcon,\r\n  CursorArrowRaysIcon,\r\n  FingerPrintIcon,\r\n  SquaresPlusIcon,\r\n  XMarkIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { ChevronDownIcon, PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\r\nimport { Link} from \"react-router-dom\";\r\nimport { useNavigate} from \"react-router-dom\"; // Import useNavigate and useParams\r\nimport axios from \"axios\"; // Import axios\r\n\r\n\r\n\r\n\r\nconst About = [\r\n  { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\r\n  { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\r\n  { name: 'Security', description: 'Your customersâ€™ data will be safe and secure', href: '#', icon: FingerPrintIcon },\r\n  { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\r\n  { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\r\n]\r\nconst callsToAction = [\r\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\r\n  { name: 'Customer Service', href: '#', icon: PhoneIcon },\r\n]\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function UserPageHeader() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n\r\n\r\n  const handleDeleteAccount = async () => {\r\n    // Display a confirmation dialog\r\n    const confirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\r\n  \r\n    // If the user confirms, proceed with the deletion\r\n    if (confirmed) {\r\n      const userTokenHere = localStorage.getItem(\"authToken\");\r\n      const userId = localStorage.getItem(\"userId\"); // Get userId from local storage\r\n  \r\n      try {\r\n        await axios.delete(`http://localhost:8080/api/user/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${userTokenHere}`,\r\n          },\r\n        });\r\n  \r\n        //need to clear out local tokens since it auto logs them out afterwards and can be security risk\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userToken');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('userEmail');\r\n        console.log(\"User has been deleted\");\r\n        // Redirect to login page after successful deletion\r\n        navigate(\"/login\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting user: \", error);\r\n      }\r\n    } else {\r\n      // The user clicks \"Cancel\" in the confirmation dialog\r\n      console.log(\"Account deletion cancelled.\");\r\n    }\r\n  };\r\n\r\n  //function to logout and clear local storage\r\n  const logout = () => {\r\n    // Clear all relevant keys from local storage\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userEmail');\r\n  \r\n    // Navigate to the login page\r\n    navigate('/login');\r\n  };\r\n  \r\n\r\n\r\n\r\n  {/*const resolvedPath = useResolvedPath(to)\r\n  const isActive  = useMatch({path:resolvedPath.pathname, end: true })*/}\r\n\r\n  {/*Dark mode toggle */}\r\n  const HSThemeAppearance = {\r\n    init() {\r\n        const defaultTheme = 'default'\r\n        let theme = localStorage.getItem('hs_theme') || defaultTheme\r\n\r\n        if (document.querySelector('html').classList.contains('dark')) return\r\n        this.setAppearance(theme)\r\n    },\r\n    _resetStylesOnLoad() {\r\n        const $resetStyles = document.createElement('style')\r\n        $resetStyles.innerText = `*{transition: unset !important;}`\r\n        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')\r\n        document.head.appendChild($resetStyles)\r\n        return $resetStyles\r\n    },\r\n    setAppearance(theme, saveInStore = true, dispatchEvent = true) {\r\n        const $resetStylesEl = this._resetStylesOnLoad()\r\n\r\n        if (saveInStore) {\r\n            localStorage.setItem('hs_theme', theme)\r\n        }\r\n\r\n        if (theme === 'auto') {\r\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\r\n        }\r\n\r\n        document.querySelector('html').classList.remove('dark')\r\n        document.querySelector('html').classList.remove('default')\r\n        document.querySelector('html').classList.remove('auto')\r\n\r\n        document.querySelector('html').classList.add(this.getOriginalAppearance())\r\n\r\n        setTimeout(() => {\r\n            $resetStylesEl.remove()\r\n        })\r\n\r\n        if (dispatchEvent) {\r\n            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))\r\n        }\r\n    },\r\n    getAppearance() {\r\n        let theme = this.getOriginalAppearance()\r\n        if (theme === 'auto') {\r\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'\r\n        }\r\n        return theme\r\n    },\r\n    getOriginalAppearance() {\r\n        const defaultTheme = 'default'\r\n        return localStorage.getItem('hs_theme') || defaultTheme\r\n    }\r\n  }\r\n  HSThemeAppearance.init()\r\n\r\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {\r\n        HSThemeAppearance.setAppearance('auto', false)\r\n    }\r\n  })\r\n\r\n  window.addEventListener('load', () => {\r\n    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')\r\n    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')\r\n\r\n    $clickableThemes.forEach($item => {\r\n        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))\r\n    })\r\n\r\n    $switchableThemes.forEach($item => {\r\n        $item.addEventListener('change', (e) => {\r\n            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')\r\n        })\r\n\r\n        $item.checked = HSThemeAppearance.getAppearance() === 'dark'\r\n    })\r\n\r\n    window.addEventListener('on-hs-appearance-change', e => {\r\n        $switchableThemes.forEach($item => {\r\n            $item.checked = e.detail === 'dark'\r\n        })\r\n    })\r\n  })\r\n\r\n\r\n  return (\r\n    <header className=\"bg-white\">\r\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\r\n        <div className=\"flex lg:flex-1\">\r\n\t\t\t\r\n        <div onClick={() => navigate(`/WelcomeUser/${localStorage.getItem('userId')}`)} className=\"-m-1.5 p-1.5 cursor-pointer\">\r\n            <span className=\"sr-only\">Scheduler131</span>\r\n            <img className=\"h-8 w-auto\" src={logo} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex lg:hidden\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\r\n            onClick={() => setMobileMenuOpen(true)}\r\n          >\r\n            <span className=\"sr-only\">Open main menu</span>\r\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\r\n          <Popover className=\"relative\">\r\n            <Popover.Button className=\"flex items-center gap-x-1 block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\r\n              About\r\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n            </Popover.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\r\n                <div className=\"p-4\">\r\n                  {About.map((item) => (\r\n                    <div\r\n                      key={item.name}\r\n                      className=\"group relative flex items-center gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\r\n                    >\r\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\r\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\r\n                      </div>\r\n                      <div className=\"flex-auto\">\r\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\r\n                          {item.name}\r\n                          <span className=\"absolute inset-0\" />\r\n                        </a>\r\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\r\n                  {callsToAction.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\r\n                    >\r\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </Popover>\r\n\r\n          <a href=\"https://discord.gg/FuHSV3XRrf\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"> \r\n            Discord\r\n          </a>\r\n         \r\n          <a href=\"\" onClick={() => navigate(\"/room\")} className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\r\n            Schedule\r\n          </a>\r\n\r\n\r\n        </Popover.Group>\r\n        \r\n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\r\n          <button type=\"button\" class=\"hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"dark\">\r\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"/></svg>\r\n          </button>\r\n          <button type=\"button\" class=\"hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500\" data-hs-theme-click-value=\"light\">\r\n            <svg class=\"flex-shrink-0 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 8a2 2 0 1 0 4 4\"/><path d=\"M12 2v2\"/><path d=\"M12 20v2\"/><path d=\"m4.93 4.93 1.41 1.41\"/><path d=\"m17.66 17.66 1.41 1.41\"/><path d=\"M2 12h2\"/><path d=\"M20 12h2\"/><path d=\"m6.34 17.66-1.41 1.41\"/><path d=\"m19.07 4.93-1.41 1.41\"/></svg>\r\n          </button>\r\n          \r\n          {/*Divides out the navbar*/}\r\n          <div class = \"border-l border-slate-200 ml-6 pl-6 dark:border-slate-800\"></div>\r\n    \r\n          {/* User settings dropdown */}\r\n          <div className=\"relative\">\r\n            <button\r\n              id=\"dropdownDividerButton\"\r\n              data-dropdown-toggle=\"dropdownDivider\"\r\n              className=\"text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              type=\"button\"\r\n              onClick={toggleDropdown}\r\n            >\r\n              User settings{' '}\r\n              <svg\r\n                className={`w-2.5 h-2.5 ms-3 ${dropdownOpen ? 'rotate-180' : ''}`}\r\n                aria-hidden=\"true\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 10 6\"\r\n              >\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 1 4 4 4-4\" />\r\n              </svg>\r\n            </button>\r\n\r\n            {/* Dropdown menu */}\r\n            <div\r\n              id=\"dropdown\"\r\n              className={`absolute z-10 ${dropdownOpen ? 'block' : 'hidden'} bg-red-100 border border-red-300 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600 mt-2`}\r\n              style={{ width: 'calc(100%)' }}\r\n            >\r\n              <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownButton\">\r\n                <li>\r\n                  {/* dropdown options below */}\r\n                </li>\r\n                <li>\r\n                   {/* delete account*/}\r\n                   <a\r\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                      onClick={handleDeleteAccount}\r\n                    >\r\n                      Delete Account\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <div className=\"py-2\">\r\n                {/* logout*/}\r\n                <a\r\n                  to=\"/login\"\r\n                  className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                  onClick = { logout }\r\n               >\r\n                  Log out\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n\r\n\r\n      {/*Minimized Version*/}\r\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\r\n        <div className=\"fixed inset-0 z-10\" />\r\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Link href=\"/\" className=\"-m-1.5 p-1.5\">\r\n              <span className=\"sr-only\">Scheduler131</span>\r\n              <img\r\n                className=\"h-8 w-auto\"\r\n                src= {logo}\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <button\r\n              type=\"button\"\r\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\r\n              onClick={() => setMobileMenuOpen(false)}\r\n            >\r\n              <span className=\"sr-only\">Close menu</span>\r\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-6 flow-root\">\r\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\r\n              <div className=\"space-y-2 py-6\">\r\n                <Disclosure as=\"div\" className=\"-mx-3\">\r\n                  {({ open }) => (\r\n                    <>\r\n                      <Disclosure.Button className=\"flex w-full items-center justify-between rounded-lg py-2 pl-3 pr-3.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\r\n                        About\r\n                        <ChevronDownIcon\t\t\t\t\t\t\r\n                          className={classNames(open ? 'rotate-180' : '', 'h-5 w-5 flex-none')}\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </Disclosure.Button>\r\n                      <Disclosure.Panel className=\"mt-2 space-y-2\">\r\n                        {[...About, ...callsToAction].map((item) => (\r\n                          <Disclosure.Button\r\n                            key={item.name}\r\n                            as=\"a\"\r\n                            href={item.href}\r\n                            className=\"block rounded-lg py-2 pl-6 pr-3 text-sm font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                          >\r\n                            {item.name}\r\n                          </Disclosure.Button>\r\n                        ))}\r\n                      </Disclosure.Panel>\r\n                    </>\r\n                  )}\r\n                </Disclosure>\r\n                <a href= \"https://discord.gg/FuHSV3XRrf\"className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\" >  Discord\r\n                </a>\r\n                <Link to=\"/room\" className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\">\r\n                  Schedule\r\n                </Link>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog.Panel>\r\n      </Dialog>\r\n\r\n\r\n      {/*Banner Section*/}\r\n        \r\n        <div className=\"relative isolate flex items-center gap-x-6 overflow-hidden bg-gray-50 px-6 py-2.5 sm:px-3.5 sm:before:flex-1\">\r\n          <div className=\"absolute left-[max(-7rem,calc(50%-52rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\r\n            <div className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\r\n              style={{\r\n                clipPath:\r\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"absolute left-[max(45rem,calc(50%+8rem))] top-1/2 -z-10 -translate-y-1/2 transform-gpu blur-2xl\" aria-hidden=\"true\">\r\n            <div\r\n              className=\"aspect-[577/310] w-[36.0625rem] bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-30\"\r\n              style={{\r\n                clipPath:\r\n                  'polygon(74.8% 41.9%, 97.2% 73.2%, 100% 34.9%, 92.5% 0.4%, 87.5% 0%, 75% 28.6%, 58.5% 54.6%, 50.1% 56.8%, 46.9% 44%, 48.3% 17.4%, 24.7% 53.9%, 0% 27.9%, 11.9% 74.2%, 24.9% 54.1%, 68.6% 100%, 74.8% 41.9%)',\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap items-center gap-x-4 gap-y-2\">\r\n          <p className=\"text-sm leading-6 text-gray-900\" style={{ whiteSpace: 'pre' }}>\r\n              Welcome User!     Note: In the future, want to display the username instead of \"user\"\r\n          </p>\r\n\r\n          </div>\r\n\r\n          <div className=\"flex flex-1 justify-end\">\r\n          {/* button tag for dismissing the registeration banner\r\n            <button type=\"button\" className=\"-m-3 p-3 focus-visible:outline-offset-[-4px]\" onClick = {handleCloseDialog}>\r\n              <span className=\"sr-only\">Dismiss</span>\r\n              <XMarkIcon className=\"h-5 w-5 text-gray-900\" aria-hidden=\"true\" />\r\n            </button> \r\n          */}      \r\n          </div>\r\n          \r\n        </div>  \r\n      \r\n    </header>\r\n    \r\n  )\r\n}","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Home.js",["87","88","89","90"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\r\n\r\n\r\nexport default function Home() {\r\n\tconst navigate = useNavigate();\r\n\r\n\t//Manages input\r\n\tconst [inputs, setInputs] = useState({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\r\n\t// Function to handle input changes\r\n\tconst handleChange = (e) => {\r\n\t\tsetInputs((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t}));\r\n\t};\r\n\r\n\t// Function to send a login request to the server using post\r\n\tconst sendRequest = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/login\", {\r\n\t\t\t\temail: inputs.email,\r\n\t\t\t\tpassword: inputs.password,\r\n\t\t\t});\r\n\t\t\tconst data = res.data;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new Error(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Function to handle a login\r\n\tconst handleSuccessfulLogin = async (userId) => {\r\n\t\tnavigate(`/WelcomeUser/${userId}`);\r\n\t};\r\n\r\n\t// Function to handle the form submission\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(inputs);\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await sendRequest();\r\n\t\t\t//Passes the user's ID to the /welcome page when logging in\r\n\t\t\thandleSuccessfulLogin(data._id);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\t{/*<div className = \"App\"> </div> --removed this*/ }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\r\n\t\r\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n\t\t\t\tLog in to Scheduler131\r\n\t\t\t\t</h2>\r\n\t\t\t</div>\r\n\t\r\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\tEmail address\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"text-sm\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\r\n\t\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\tLog in\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\r\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\r\n\t\t\t\t\tDon't have an account?{' '}\r\n\t\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\r\n\t\t\t\t\t\tRegister here\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<footer>\r\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\r\n\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\r\n\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t\t</>\r\n\t  )\r\n\t}\r\n\t","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Room.js",["91"],[],"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\UserPage.js",["92","93"],[],"//This is the page in which the user will see, and it will show all user permisions and allow them to schedule\r\nimport dayjs from \"dayjs\";\r\nimport React, { useState } from \"react\";\r\nimport { generateDate, months } from \"./Calendar\";\r\nimport cn from \"./cn\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function UserPage() {\r\n\t\r\n\tconst days = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\tconst currentDate = dayjs();\r\n\tconst [today, setToday] = useState(currentDate);\r\n\tconst [selectDate, setSelectDate] = useState(currentDate);\r\n\tconst { userId } = useParams();\r\n\r\n\r\n\treturn (\r\n\t\t\r\n    \r\n\t<div className=\"flex gap-10 sm:divide-x justify-center px-6 py-12 sm:w-1/2 mx-auto items-center sm:flex-row flex-col\">\r\n\t\t<div className=\"w-96 h-96 \">\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<h1 className=\"select-none font-semibold\">\r\n\t\t\t\t\t{months[today.month()]}, {today.year()}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"flex gap-10 items-center \">\r\n\t\t\t\t\t<GrFormPrevious\r\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetToday(today.month(today.month() - 1));\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h1\r\n\t\t\t\t\tclassName=\" cursor-pointer hover:scale-105 transition-all\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetToday(currentDate);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\tToday\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<GrFormNext\r\n\t\t\t\t\tclassName=\"w-5 h-5 cursor-pointer hover:scale-105 transition-all\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetToday(today.month(today.month() + 1));\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"grid grid-cols-7 \">\r\n\t\t\t{days.map((day, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t<h1\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tclassName=\"text-sm text-center h-14 w-14 grid place-content-center text-gray-500 select-none\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{day}\r\n\t\t\t\t</h1>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\" grid grid-cols-7 \">\r\n\t\t\t{generateDate(today.month(), today.year()).map(\r\n\t\t\t\t({ date, currentMonth, today }, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tclassName=\"p-2 text-center h-14 grid place-content-center text-sm border-t\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<h1\r\n\t\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\tcurrentMonth ? \"\" : \"text-gray-400\",\r\n\t\t\t\t\t\ttoday\r\n\t\t\t\t\t\t\t? \"bg-red-600 text-white\"\r\n\t\t\t\t\t\t\t: \"\",\r\n\t\t\t\t\t\tselectDate\r\n\t\t\t\t\t\t\t.toDate()\r\n\t\t\t\t\t\t\t.toDateString() ===\r\n\t\t\t\t\t\t\tdate.toDate().toDateString()\r\n\t\t\t\t\t\t\t? \"bg-black text-white\"\r\n\t\t\t\t\t\t\t: \"\",\r\n\t\t\t\t\t\t\"h-10 w-10 rounded-full grid place-content-center hover:bg-black hover:text-white transition-all cursor-pointer select-none\"\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetSelectDate(date);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{date.date()}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div className=\"h-96 w-96 sm:px-5\">\r\n\t\t\t<h1 className=\" font-semibold\">\r\n\t\t\tSchedule for {selectDate.toDate().toDateString()}\r\n\t\t\t</h1>\r\n            <p className=\"text-gray-400\">No meetings for today.</p>\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\n","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Register.js",["94"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n\tconst navigate = useNavigate(); // useNavigate provides navigation functionality\r\n\tconst [inputs, setInputs] = useState({\r\n\t\tname: \"\",\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetInputs((prev) => ({\r\n\t\t...prev,\r\n\t\t[e.target.name]: e.target.value,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst sendRequest = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\"http://localhost:8080/api/user/register\", {\r\n\t\t\t\tname: inputs.name,\r\n\t\t\t\temail: inputs.email,\r\n\t\t\t\tpassword: inputs.password,\r\n\t\t\t});\r\n\t\t\tconst data = res.data;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tthrow new Error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(inputs);\r\n\t\t//send http request\r\n\t\ttry {\r\n\t\t\tconst data = await sendRequest();\r\n\t\t\t// Navigate to login page after successful registration\r\n\t\t\tnavigate('/login');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\r\n\r\n\t\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n\t\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n\t\t\t\tRegister an account\r\n\t\t\t\t</h2>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\tEmail address\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"name\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\tRegister \r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\r\n\t\t\t\t\tAlready have an account?{' '}\r\n\t\t\t\t\t<Link to=\"/login\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\r\n\t\t\t\t\t\tLog in here\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<footer>\r\n\t\t\t<div class=\"w-full mx-auto p-4 md:py-10\">\r\n\t\t\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\r\n\t\t\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\r\n\t\t\t</div>\r\n\t  \t</footer>\r\n\t\t</>\r\n\t)\r\n}","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Login.js",["95","96","97"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link, useMatch, useResolvedPath} from \"react-router-dom\";\r\n\r\n\r\nexport default function Login() {\r\n\tconst navigate = useNavigate();\r\n\r\n    // Manages input\r\n    const [inputs, setInputs] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    // Function to handle input changes\r\n    const handleChange = (e) => {\r\n        setInputs((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    // Function to send a login request to the server using post\r\n    const sendRequest = async () => {\r\n        try {\r\n            const res = await axios.post(\"http://localhost:8080/api/user/login\", {\r\n                email: inputs.email,\r\n                password: inputs.password,\r\n            });\r\n            const data = res.data;\r\n            localStorage.setItem('authToken', data.token);  // Store the token in localStorage\r\n\r\n            return data;\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n\r\n    // Function to handle a login\r\n    const handleSuccessfulLogin = async (userId, token) => {\r\n\t\tlocalStorage.setItem('userId', userId); // Save userId to local storage\r\n        localStorage.setItem('authToken', token); // Saves the authentication token to local storage\r\n        navigate(`/WelcomeUser/${userId}`);\r\n    };\r\n\r\n    // Function to handle the form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(inputs);\r\n\r\n        try {\r\n            const data = await sendRequest();\r\n            // Passes the user's ID and token to the /welcome page when logging in\r\n            handleSuccessfulLogin(data._id, data.token);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n  return (\r\n\t<>\r\n\t{/*<img className=\"mx-auto h-10 w-auto\" src= {logo} alt=\"Your Company\"/>   ---for displaying the logo on the login page */}\r\n\r\n\t<div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n\t\t<div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t<h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n\t\t\tLog in to Scheduler131\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n\t\t\t<form className=\"space-y-6\" onSubmit={handleSubmit} action=\"#\" method=\"POST\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\tEmail address\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\r\n\t\t\t\t\t<label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className=\"text-sm\">\r\n\t\t\t\t\t\t<a href=\"#\" className=\"font-semibold text-red-600 hover:text-indigo-500\">\r\n\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mt-2\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tclassName=\"block w-full rounded-md border-0 px-2.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\tLog in\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<p className=\"mt-10 text-center text-sm text-gray-500\">\r\n\t\t\t\tDon't have an account?{' '}\r\n\t\t\t\t<Link to=\"/register\" className=\"font-semibold leading-6 text-red-600 hover:text-indigo-500\">\r\n\t\t\t\t\tRegister here\r\n\t\t\t\t</Link>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\t<footer>\r\n\t\t<div class=\"w-full mx-auto p-4 md:py-auto\">\r\n\t\t<hr class=\"my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8\" />\r\n\t\t<span class=\"block text-sm text-gray-500 sm:text-center dark:text-gray-400\">Â© 2023 Scheduler131â„¢. All Rights Reserved.</span>\r\n\t\t</div>\r\n\t</footer>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\cn.js",[],[],"C:\\Users\\ricky\\useraccountproject\\Scheduler131\\main\\src\\util\\Calendar.js",[],[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":13,"column":9,"nodeType":"102","messageId":"103","endLine":13,"endColumn":28},{"ruleId":"100","severity":1,"message":"105","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":43,"column":3,"nodeType":"108","messageId":"109","endLine":44,"endColumn":74},{"ruleId":"106","severity":1,"message":"107","line":46,"column":3,"nodeType":"108","messageId":"109","endLine":46,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":206,"column":11,"nodeType":"112","endLine":206,"endColumn":126},{"ruleId":"110","severity":1,"message":"111","line":226,"column":19,"nodeType":"112","endLine":226,"endColumn":118},{"ruleId":"110","severity":1,"message":"111","line":229,"column":19,"nodeType":"112","endLine":229,"endColumn":118},{"ruleId":"110","severity":1,"message":"111","line":233,"column":17,"nodeType":"112","endLine":233,"endColumn":157},{"ruleId":"110","severity":1,"message":"111","line":300,"column":17,"nodeType":"112","endLine":303,"endColumn":18},{"ruleId":"100","severity":1,"message":"105","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":100,"column":3,"nodeType":"108","messageId":"109","endLine":101,"endColumn":74},{"ruleId":"106","severity":1,"message":"107","line":103,"column":3,"nodeType":"108","messageId":"109","endLine":103,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":264,"column":11,"nodeType":"112","endLine":264,"endColumn":159},{"ruleId":"110","severity":1,"message":"113","line":314,"column":20,"nodeType":"112","endLine":317,"endColumn":22},{"ruleId":"110","severity":1,"message":"113","line":324,"column":17,"nodeType":"112","endLine":328,"endColumn":17},{"ruleId":"100","severity":1,"message":"114","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":24},{"ruleId":"100","severity":1,"message":"115","line":4,"column":26,"nodeType":"102","messageId":"103","endLine":4,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":57,"column":2,"nodeType":"108","messageId":"109","endLine":57,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":95,"column":8,"nodeType":"112","endLine":95,"endColumn":81},{"ruleId":"100","severity":1,"message":"116","line":129,"column":7,"nodeType":"102","messageId":"103","endLine":129,"endColumn":23},{"ruleId":"100","severity":1,"message":"117","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":13},{"ruleId":"100","severity":1,"message":"118","line":18,"column":10,"nodeType":"102","messageId":"103","endLine":18,"endColumn":16},{"ruleId":"100","severity":1,"message":"119","line":44,"column":10,"nodeType":"102","messageId":"103","endLine":44,"endColumn":14},{"ruleId":"100","severity":1,"message":"114","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":24},{"ruleId":"100","severity":1,"message":"115","line":4,"column":26,"nodeType":"102","messageId":"103","endLine":4,"endColumn":41},{"ruleId":"110","severity":1,"message":"111","line":98,"column":7,"nodeType":"112","endLine":98,"endColumn":80},"no-new-object",["120"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'routesWithoutHeader' is assigned a value but never used.","'Login' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useMatch' is defined but never used.","'useResolvedPath' is defined but never used.","'fetchUserDetails' is assigned a value but never used.","'axios' is defined but never used.","'userId' is assigned a value but never used.","'data' is assigned a value but never used.","no-object-constructor"]