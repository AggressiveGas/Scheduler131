{"ast":null,"code":"var _jsxFileName = \"/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TimezoneSelect from \"react-timezone-select\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; //going to be used to calls like on any other form {personally I like axios}\nimport './RoomStyling.css';\n\n//Pop-ups that the user would see(the UI setup for rooms)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showCreatePopup, setShowCreatePopup] = useState(false);\n  const [showAvailabilityPopup, setShowAvailabilityPopup] = useState(false);\n  const [selectedtimezone, setSelectedTimezone] = useState(''); //holds the entered timezone\n  const [roomCode, setRoomCode] = useState(''); //holds the entered room code\n  const [roomName, setRoomName] = useState(''); //holds the entered room name\n  const [userRooms, setUserRooms] = useState([]); //will hold list of rooms user is associated with\n  const [selectedRoom, setSelectedRoom] = useState(null); //will hold selected rooms on ui\n  const navigate = useNavigate();\n  const handleAddClick = () => {\n    setShowPopup(true);\n  };\n  const handleAddRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking add --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAddPopup(true); // Show the \"Add\" popup\n  };\n\n  const handleCreateRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowCreatePopup(true); // Show the \"Create\" popup\n  };\n\n  const handleAvailability = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAvailabilityPopup(true); // Show the \"Availability\" popup\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setShowAddPopup(false);\n    setShowCreatePopup(false);\n    setShowAvailabilityPopup(false);\n  };\n  const handleRoomClick = room => {\n    setSelectedRoom(room);\n  };\n\n  //functionalities for creating and joining rooms:\n  //Function to create a new room\n  const createRoomApiCall = async roomName => {\n    //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n    try {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const response = await axios.post('http://localhost:8080/api/rooms', {\n        name: roomName\n      }, {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`\n        }\n      });\n\n      //console log for success\n      console.log('Room created successfully:', response.data);\n    } catch (error) {\n      //console log for error\n      console.error('Error creating room:', error.response.data.message);\n    }\n  };\n\n  // Function to join a room\n  const joinRoomApiCall = async roomCode => {\n    //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n\n    try {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const response = await axios.post(`http://localhost:8080/api/rooms/${roomCode}/users`, null, {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`\n        }\n      });\n\n      //console log for success\n      console.log('Joined room successfully:', response.data);\n    } catch (error) {\n      //console log for error\n      console.error('Error joining room:', error.response.data.message);\n    }\n  };\n\n  //this here will get the users rooms that they joined or created.\n  useEffect(() => {\n    const fetchUserRooms = async () => {\n      try {\n        const userId = localStorage.getItem(\"userId\");\n        const userTokenHere = localStorage.getItem(\"authToken\");\n        const response = await axios.get(`http://localhost:8080/api/user/${userId}/rooms`, {\n          headers: {\n            Authorization: `Bearer ${userTokenHere}`\n          }\n        });\n        const roomsWithUserDetails = await Promise.all(response.data.map(async room => {\n          const userDetailsList = await Promise.all(room.userlist.map(async userId => {\n            const userResponse = await axios.get(`http://localhost:8080/api/user/${userId}`);\n            return userResponse.data;\n          }));\n          return {\n            ...room,\n            userDetailsList\n          };\n        }));\n        setUserRooms(roomsWithUserDetails || []);\n      } catch (error) {\n        console.error('Error fetching user rooms:', error.response.data.message);\n      }\n    };\n    fetchUserRooms();\n  }, []);\n\n  //instead of grabbing user ID I need their names which will be displayed in room details after\n  const fetchUserDetails = async userId => {\n    try {\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const response = await axios.get(`http://localhost:8080/api/user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`\n        }\n      });\n      return response.data; // Assuming the user details are returned in the response\n    } catch (error) {\n      console.error('Error fetching user details:', error.response.data.message);\n      return null;\n    }\n  };\n\n  //everything below is formatting/buttons/inputs for the pop up forms.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container flex flex-wrap items-start justify-start h-screen px-9 py-12 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `room-button ${selectedRoom ? 'selected-room' : 'add-room-button'}`,\n      onClick: handleAddClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2 text-4xl\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), \"Add Room\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), userRooms.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"room-button\",\n      onClick: () => handleRoomClick(room),\n      children: room.name\n    }, room.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)), selectedRoom &&\n    /*#__PURE__*/\n    // Overlay for Room Details\n    _jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:text-red-800 absolute top-0 right-2\",\n          onClick: () => setSelectedRoom(null),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Room Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room Name: \", selectedRoom.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Join Code: \", selectedRoom.joincode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Users:\", ' ', selectedRoom.userDetailsList.map((user, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.name, index !== selectedRoom.userDetailsList.length - 1 && ', ']\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => navigate(\"/availability\"),\n          className: \"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-400\",\n          children: \"Availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          //this here is the red x button which will close the popup\n          className: \"text-red-600 hover:text-red-800 absolute top-0 right-2\",\n          onClick: handleClosePopup,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          //this is the blue \"add\" button above the \"OR\" statement\n          className: \"bg-blue-500 hover:bg-blue-700 text-white px-10 py-2 rounded mb-2\",\n          onClick: handleAddRoom,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold my-2\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          //this is the green \"create\" button below  the \"OR\" statement\n          className: \"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mb-2\",\n          onClick: handleCreateRoom,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), showAddPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:text-red-800 absolute top-0 right-2\",\n          onClick: handleClosePopup,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Enter a code to join a room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border border-gray-400 px-3 py-2 rounded w-full\",\n          placeholder: \"Enter code\",\n          value: roomCode,\n          onChange: e => setRoomCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 text-white px-8 py-2 rounded mt-4\",\n          onClick: () => {\n            // Add logic for joining a room\n            joinRoomApiCall(roomCode); //pass the user's input value to the call\n\n            setShowAddPopup(false);\n          },\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), showCreatePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:text-red-800 absolute top-0 right-2\",\n          onClick: handleClosePopup,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Create a new room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border border-gray-400 px-3 py-2 rounded w-full\",\n          placeholder: \"Enter room name\",\n          value: roomName,\n          onChange: e => setRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mt-4\",\n          onClick: () => {\n            // Add logic for creating a room\n            createRoomApiCall(roomName); //pass the user's input for room name to api call\n\n            setShowCreatePopup(false);\n          },\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), showAvailabilityPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-600 hover:text-red-800 absolute top-0 right-2\",\n          onClick: handleClosePopup,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Select your Availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Pick your Timezone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimezoneSelect, {\n          value: selectedtimezone,\n          onChange: setSelectedTimezone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 1\n  }, this);\n};\n_s(Room, \"DcWc/d0rxCdyJQ1ItEkrveWS6Vc=\", false, function () {\n  return [useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","TimezoneSelect","useNavigate","axios","jsxDEV","_jsxDEV","Room","_s","showPopup","setShowPopup","showAddPopup","setShowAddPopup","showCreatePopup","setShowCreatePopup","showAvailabilityPopup","setShowAvailabilityPopup","selectedtimezone","setSelectedTimezone","roomCode","setRoomCode","roomName","setRoomName","userRooms","setUserRooms","selectedRoom","setSelectedRoom","navigate","handleAddClick","handleAddRoom","handleCreateRoom","handleAvailability","handleClosePopup","handleRoomClick","room","createRoomApiCall","userTokenHere","localStorage","getItem","response","post","name","headers","Authorization","console","log","data","error","message","joinRoomApiCall","fetchUserRooms","userId","get","roomsWithUserDetails","Promise","all","map","userDetailsList","userlist","userResponse","fetchUserDetails","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","joincode","user","index","length","href","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ajays/Documents/Scheduler131-1/main/src/util/Room.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimezoneSelect from \"react-timezone-select\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; //going to be used to calls like on any other form {personally I like axios}\nimport './RoomStyling.css';\n\n//Pop-ups that the user would see(the UI setup for rooms)\nconst Room = () => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showCreatePopup, setShowCreatePopup] = useState(false);\n  const [showAvailabilityPopup, setShowAvailabilityPopup] = useState(false);\n  const [selectedtimezone, setSelectedTimezone] = useState(''); //holds the entered timezone\n  const [roomCode, setRoomCode] = useState(''); //holds the entered room code\n  const [roomName, setRoomName] = useState(''); //holds the entered room name\n  const [userRooms, setUserRooms] = useState([]);//will hold list of rooms user is associated with\n  const [selectedRoom, setSelectedRoom] = useState(null); //will hold selected rooms on ui\n  const navigate = useNavigate();\n\n  \n  const handleAddClick = () => {\n    setShowPopup(true);\n  };\n\n  const handleAddRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking add --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAddPopup(true); // Show the \"Add\" popup\n  };\n\n  const handleCreateRoom = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowCreatePopup(true); // Show the \"Create\" popup\n  };\n\n  const handleAvailability = () => {\n    setShowPopup(false); // Close the main popup after clicking create --SideNote: I did this because don't want multiple windows show up and making it confusing for the user\n    setShowAvailabilityPopup(true); // Show the \"Availability\" popup\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setShowAddPopup(false);\n    setShowCreatePopup(false);\n    setShowAvailabilityPopup(false);\n  };\n\n  const handleRoomClick = (room) => {\n    setSelectedRoom(room);\n  };\n\n\n//functionalities for creating and joining rooms:\n//Function to create a new room\nconst createRoomApiCall = async (roomName) => {\n\n  //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n\n    const response = await axios.post('http://localhost:8080/api/rooms', { name: roomName }, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n    //console log for success\n    console.log('Room created successfully:', response.data);\n  } catch (error) {\n    //console log for error\n    console.error('Error creating room:', error.response.data.message);\n  }\n};\n\n// Function to join a room\nconst joinRoomApiCall = async (roomCode) => {\n\n  //Since token is stored locally, gonna need to grab it for authorization otherwise can't make or join rooms\n\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n\n    const response = await axios.post(`http://localhost:8080/api/rooms/${roomCode}/users`, null, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n    //console log for success\n    console.log('Joined room successfully:', response.data);\n  } catch (error) {\n    //console log for error\n    console.error('Error joining room:', error.response.data.message);\n  }\n};\n\n\n//this here will get the users rooms that they joined or created.\nuseEffect(() => {\n  const fetchUserRooms = async () => {\n    try {\n      \n      const userId = localStorage.getItem(\"userId\");\n      const userTokenHere = localStorage.getItem(\"authToken\");\n      const response = await axios.get(`http://localhost:8080/api/user/${userId}/rooms`, {\n        headers: {\n          Authorization: `Bearer ${userTokenHere}`,\n        },\n      });\n\n      const roomsWithUserDetails = await Promise.all(\n        response.data.map(async (room) => {\n          const userDetailsList = await Promise.all(\n            room.userlist.map(async (userId) => {\n              const userResponse = await axios.get(`http://localhost:8080/api/user/${userId}`);\n              return userResponse.data;\n            })\n          );\n          return { ...room, userDetailsList };\n        })\n      );\n\n      setUserRooms(roomsWithUserDetails || []);\n    } catch (error) {\n      console.error('Error fetching user rooms:', error.response.data.message);\n    }\n  };\n\n  fetchUserRooms();\n}, []);\n\n\n//instead of grabbing user ID I need their names which will be displayed in room details after\nconst fetchUserDetails = async (userId) => {\n  try {\n    const userTokenHere = localStorage.getItem(\"authToken\");\n    const response = await axios.get(`http://localhost:8080/api/user/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userTokenHere}`,\n      },\n    });\n\n    return response.data; // Assuming the user details are returned in the response\n  } catch (error) {\n    console.error('Error fetching user details:', error.response.data.message);\n    return null;\n  }\n};\n\n\n//everything below is formatting/buttons/inputs for the pop up forms.\n  return (   \n<div className=\"container flex flex-wrap items-start justify-start h-screen px-9 py-12 relative\">\n    {/* +add room button */}\n    <button\n      className={`room-button ${selectedRoom ? 'selected-room' : 'add-room-button'}`}\n      onClick={handleAddClick}\n    >\n      <span className=\"mr-2 text-4xl\">+</span>\n      Add Room\n    </button>\n\n    {/* Render clickable room buttons */}\n    {userRooms.map((room) => (\n        <button\n          key={room.id}\n          className=\"room-button\"\n          onClick={() => handleRoomClick(room)}\n        >\n          {room.name}\n        </button>\n      ))}\n\n{selectedRoom && (\n        // Overlay for Room Details\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-0\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={() => setSelectedRoom(null)}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n            <p className=\"text-lg font-semibold mb-4\">Room Details</p>\n\n            <p>Room Name: {selectedRoom.name}</p>\n            <p>Join Code: {selectedRoom.joincode}</p>\n\n            <p>\n              Users:{' '}\n              {selectedRoom.userDetailsList.map((user, index) => (\n                <span key={user.id}>\n                  {user.name}\n                  {index !== selectedRoom.userDetailsList.length - 1 && ', '}\n                </span>\n              ))}\n            </p>\n\n            <a href=\"#\" onClick={() => navigate(\"/availability\")} className=\"block rounded-lg px-3 py-2 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-400\">\n              Availability\n            </a>\n          </div>\n        </div>\n      )}\n\n\n      {showPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n            //this here is the red x button which will close the popup\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n            <button\n            //this is the blue \"add\" button above the \"OR\" statement\n              className=\"bg-blue-500 hover:bg-blue-700 text-white px-10 py-2 rounded mb-2\"\n              onClick={handleAddRoom}\n            >\n              Add\n            </button>\n\n            <p className=\"text-lg font-semibold my-2\">OR</p>\n\n            <button\n            //this is the green \"create\" button below  the \"OR\" statement\n              className=\"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mb-2\"\n              onClick={handleCreateRoom}\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      )}\n\n{/*Below is the Add a new room popup box alongside its formatting*/}\n      {showAddPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n            <p className=\"text-lg font-semibold mb-4\">Enter a code to join a room</p>\n\n            {/* Input textbox for entering room code */}\n            <input\n              type=\"text\"\n              className=\"border border-gray-400 px-3 py-2 rounded w-full\"\n              placeholder=\"Enter code\"\n              value={roomCode}\n              onChange={(e) => setRoomCode(e.target.value)}\n            />\n\n             {/* Join Room button after they put in their code*/}\n            <button\n              className=\"bg-blue-500 hover:bg-blue-700 text-white px-8 py-2 rounded mt-4\"\n              onClick={() => {\n                // Add logic for joining a room\n                joinRoomApiCall(roomCode); //pass the user's input value to the call\n        \n                setShowAddPopup(false);\n              }}\n            >\n              Join Room\n            </button>\n          </div>\n        </div>\n      )}\n\n{/*Below is the Create a new room popup box alongside its formatting*/}\n      {showCreatePopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n            <p className=\"text-lg font-semibold mb-4\">Create a new room</p>\n\n            {/* Input textbox for creating a new room-- SideNote: this is where they put the room name */}\n            <input\n              type=\"text\"\n              className=\"border border-gray-400 px-3 py-2 rounded w-full\"\n              placeholder=\"Enter room name\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n            />\n\n            {/* Create Room button after they put in their new room name*/}\n            <button\n              className=\"bg-green-500 hover:bg-green-700 text-white px-8 py-2 rounded mt-4\"\n              onClick={() => {\n                // Add logic for creating a room\n                createRoomApiCall(roomName); //pass the user's input for room name to api call\n        \n                setShowCreatePopup(false);\n              }}\n            >\n              Create Room\n            </button>\n          </div>\n        </div>\n      )}\n{/*Below is the Availability popup box alongside its formatting*/}\n      {showAvailabilityPopup && (\n        <div className=\"fixed inset-0 flex items-center justify-center\">\n          <div className=\"bg-white p-8 rounded-lg shadow-md relative w-80 flex flex-col items-center border border-gray-300\">\n            <button\n              className=\"text-red-600 hover:text-red-800 absolute top-0 right-2\"\n              onClick={handleClosePopup}\n            >\n              <span className=\"text-2xl font-bold\">&times;</span>\n            </button>\n\n            <p className=\"text-lg font-semibold mb-4\">Select your Availability</p>\n            <p className=\"text-lg font-semibold mb-2\">Pick your Timezone</p>\n            <TimezoneSelect\n              value={selectedtimezone}\n              onChange={setSelectedTimezone}\n            />\n               {/* useNavigate('/Availability'); /*this is the button that will take you to the availability page*/}\n\n            {/* keep this as it is if anyone wants to use this code. later on, we can delete it*/}\n\n            {/* Input textbox for entering room code \n            <input\n              type=\"text\"\n              className=\"border border-gray-400 px-3 py-2 rounded w-full\"\n              placeholder=\"Enter code\"\n              value={roomCode}\n              onChange={(e) => setRoomCode(e.target.value)}\n            />\n            */}\n\n             {/* Join Room button after they put in their code\n            <button\n              className=\"bg-blue-500 hover:bg-blue-700 text-white px-8 py-2 rounded mt-4\"\n              onClick={() => {\n                // Add logic for joining a room\n                joinRoomApiCall(roomCode); //pass the user's input value to the call\n        \n                setShowAddPopup(false);\n              }} \n            >\n              Join Room\n            </button> */}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Room;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}